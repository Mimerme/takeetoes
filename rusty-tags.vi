!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AD	/home/mimerme/takeetoes/src/takeetoe.rs	/^const AD : u8 = 0x03;           \/\/Sent by a node to advertise its server, but doesn't expect a response$/;"	c
ADD_ANY_PORT_MAPPING_HEADER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub const ADD_ANY_PORT_MAPPING_HEADER: &'static str =$/;"	c
ADD_PORT_MAPPING_HEADER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub const ADD_PORT_MAPPING_HEADER: &'static str = r#""urn:schemas-upnp-org:service:WANIPConnection:1#AddPortMapping""#;$/;"	c
ATTEMPTS	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^        const ATTEMPTS: usize = 20;$/;"	c
AccessKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum AccessKind {$/;"	g
AccessMode	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum AccessMode {$/;"	g
Action	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^pub enum Action<'a> {$/;"	g
Action	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/soap.rs	/^pub struct Action(String);$/;"	s
Action	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^enum Action {$/;"	g
AddAnyPortError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum AddAnyPortError {$/;"	g
AddPortError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum AddPortError {$/;"	g
AfterToken	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^pub type AfterToken = Option<Instant>;$/;"	T
Ancestor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^struct Ancestor {$/;"	s
AnyMap	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub type AnyMap = Map<dyn CloneAny + Send + Sync>;$/;"	T
ApplyError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^pub struct ApplyError(usize);$/;"	s
ArgumentKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^enum ArgumentKind {$/;"	g
ArgumentParser	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^pub struct ArgumentParser<'parser> {$/;"	s
ArrayToken	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^pub struct ArrayToken {$/;"	s
Attr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^        enum Attr {$/;"	g
Attrs	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^        struct Attrs(pub HashMap<String, Attr>);$/;"	s
BLOCK_CAP	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^const BLOCK_CAP: usize = LAP - 1;$/;"	c
BLOCK_LEN	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub const BLOCK_LEN: usize = 16;$/;"	c
BUF_SIZE	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^const BUF_SIZE: u32 = 16384;$/;"	c
BadFill	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^        struct BadFill;$/;"	s
Block	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^struct Block<T> {$/;"	s
BlockSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    type BlockSize = BlockSize;$/;"	T
BlockSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^type BlockSize = U64;$/;"	T
BlockSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    type BlockSize = BlockSize;$/;"	T
BlockSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^type BlockSize = U128;$/;"	T
CFRunLoopIsWaiting	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    pub fn CFRunLoopIsWaiting(runloop: cf::CFRunLoopRef) -> bool;$/;"	f
CONTEXT	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^            static CONTEXT: Cell<Option<Context>> = Cell::new(Some(Context::new()));$/;"	c
COUNTER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^        static COUNTER: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
CastStream	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    struct CastStream<'v>(Cast<'v>);$/;"	s
CastVisitor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^        struct CastVisitor<'v>(Cast<'v>);$/;"	s
Channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^pub struct Channel {$/;"	s
Channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^pub struct Channel<T> {$/;"	s
Channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^pub struct Channel<T> {$/;"	s
Channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^pub struct Channel<T> {$/;"	s
Channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^pub struct Channel {$/;"	s
Channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^pub struct Channel<T> {$/;"	s
Classifier	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^pub struct Classifier<'a, T: ?Sized> {$/;"	s
Collect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct Collect;$/;"	s
Config	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/config.rs	/^pub enum Config {$/;"	g
ConflictStyle	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^pub enum ConflictStyle {$/;"	g
Context	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^struct Context<'ctx, 'parser: 'ctx> {$/;"	s
Context	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^pub struct Context {$/;"	s
Count	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        struct Count(usize);$/;"	s
Counter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^struct Counter<C> {$/;"	s
CreateKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum CreateKind {$/;"	g
DEFAULT_CONFLICT_MARKER_LENGTH	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^const DEFAULT_CONFLICT_MARKER_LENGTH: usize = 7;$/;"	c
DELETE_PORT_MAPPING_HEADER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub const DELETE_PORT_MAPPING_HEADER: &'static str =$/;"	c
DESTROY	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^const DESTROY: usize = 4;$/;"	c
DataChange	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum DataChange {$/;"	g
DebugVisitor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^        struct DebugVisitor<'a, 'b: 'a>(&'a mut fmt::Formatter<'b>);$/;"	s
DecrBy	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct DecrBy<T>(pub T);$/;"	s
DecrByAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/num.rs	/^pub struct DecrByAction<'a, T: 'a> {$/;"	s
Diff	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^enum Diff<'a, T: ?Sized> {$/;"	g
Diff3Range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^enum Diff3Range<'ancestor, 'ours, 'theirs, T: ?Sized> {$/;"	g
DiffOptions	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^pub struct DiffOptions {$/;"	s
DiffRange	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^pub enum DiffRange<'a, 'b, T: ?Sized> {$/;"	g
Dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub struct Dir {$/;"	s
DirEntry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^pub struct DirEntry {$/;"	s
DirEntryExt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^pub trait DirEntryExt {$/;"	t
DirList	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^enum DirList {$/;"	g
DisplayVisitor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^        struct DisplayVisitor<'a, 'b: 'a>(&'a mut fmt::Formatter<'b>);$/;"	s
ESCAPED_CHARS	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^const ESCAPED_CHARS: &[char] = &['\\n', '\\t', '\\0', '\\r', '\\"', '\\\\'];$/;"	c
ESCAPED_CHARS_BYTES	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^const ESCAPED_CHARS_BYTES: &[u8] = &[b'\\n', b'\\t', b'\\0', b'\\r', b'\\"', b'\\\\'];$/;"	c
EditRange	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^struct EditRange {$/;"	s
Engine256	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^struct Engine256 {$/;"	s
Engine512	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^struct Engine512 {$/;"	s
Entry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^pub struct Entry {$/;"	s
EnvVar	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^struct EnvVar<'parser> {$/;"	s
Err	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_enum.rs	/^    type Err = ();$/;"	T
Err	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    type Err = ParseLevelError;$/;"	T
Error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum Error {$/;"	g
Error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^pub struct Error {$/;"	s
Error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^pub struct Error {$/;"	s
ErrorCause	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/error.rs	/^enum ErrorCause {$/;"	g
ErrorInner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^enum ErrorInner {$/;"	g
ErrorKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^pub enum ErrorKind {$/;"	g
Event	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub struct Event {$/;"	s
EventFn	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^pub trait EventFn: 'static + Fn(Result<Event>) + Send {}$/;"	t
EventKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum EventKind {$/;"	g
EventLoop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^struct EventLoop {$/;"	s
EventLoopMsg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^enum EventLoopMsg {$/;"	g
FieldAttr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^enum FieldAttr {$/;"	g
FieldExt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^struct FieldExt<'a> {$/;"	s
File	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^pub struct File<'a> {$/;"	s
Filename	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^struct Filename<'a, T: ToOwned + ?Sized>(Cow<'a, T>);$/;"	s
Fill	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^pub trait Fill {$/;"	t
FilterEntry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub struct FilterEntry<I, P> {$/;"	s
Flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum Flag {$/;"	g
FromCommandLine	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub trait FromCommandLine: Sized {$/;"	t
FsEventWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^pub struct FsEventWatcher {$/;"	s
GET_EXTERNAL_IP_HEADER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub const GET_EXTERNAL_IP_HEADER: &'static str =$/;"	c
GET_GENERIC_PORT_MAPPING_ENTRY	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub const GET_GENERIC_PORT_MAPPING_ENTRY: &'static str =$/;"	c
Gateway	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/gateway.rs	/^pub struct Gateway {$/;"	s
Gateway	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^pub struct Gateway {$/;"	s
GenericArgument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^struct GenericArgument<'parser> {$/;"	s
GenericOption	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^struct GenericOption<'parser> {$/;"	s
Get	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        struct Get<'k, 'v> {$/;"	s
GetExternalIpError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum GetExternalIpError {$/;"	g
GetGenericPortMappingEntryError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum GetGenericPortMappingEntryError {$/;"	g
Greeting	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_enum.rs	/^enum Greeting {$/;"	g
H224	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub static H224: [u32; STATE_LEN] = [$/;"	c
H256	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub static H256: [u32; STATE_LEN] = [$/;"	c
H384	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub static H384: [u64; STATE_LEN] = [$/;"	c
H512	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub static H512: [u64; STATE_LEN] = [$/;"	c
H512_TRUNC_224	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub static H512_TRUNC_224: [u64; STATE_LEN] = [$/;"	c
H512_TRUNC_256	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub static H512_TRUNC_256: [u64; STATE_LEN] = [$/;"	c
HEADER_NAME	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/soap.rs	/^const HEADER_NAME: &str = "SOAPAction";$/;"	c
HelpAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/help.rs	/^pub struct HelpAction;$/;"	s
HelpFormatter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^struct HelpFormatter<'a, 'b: 'a> {$/;"	s
HexString	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^pub struct HexString(String);$/;"	s
HexStringError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^pub enum HexStringError {$/;"	g
Hunk	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^pub struct Hunk<'a, T: ?Sized> {$/;"	s
HunkDisplay	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^struct HunkDisplay<'a, T: ?Sized> {$/;"	s
HunkRange	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^pub struct HunkRange {$/;"	s
IArgAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^pub trait IArgAction {$/;"	t
IArgsAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^pub trait IArgsAction {$/;"	t
IFlagAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^pub trait IFlagAction {$/;"	t
INITIALIZED	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^const INITIALIZED: usize = 2;$/;"	c
INITIALIZING	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^const INITIALIZING: usize = 1;$/;"	c
INOTIFY	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^const INOTIFY: mio::Token = mio::Token(0);$/;"	c
INTRO	/home/mimerme/takeetoes/src/takeetoe.rs	/^const INTRO : u8 = 0x01;        \/\/Used for introducing a new node to the network$/;"	c
INTRO_RES	/home/mimerme/takeetoes/src/takeetoe.rs	/^const INTRO_RES : u8 = 0x02;    \/\/Used by network nodes to acknowledge INTRO$/;"	c
INotifyWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^pub struct INotifyWatcher(Mutex<mio_extras::channel::Sender<EventLoopMsg>>);$/;"	s
ImageLine	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^enum ImageLine<'a, T: ?Sized> {$/;"	g
IncrBy	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct IncrBy<T>(pub T);$/;"	s
IncrByAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/num.rs	/^pub struct IncrByAction<'a, T: 'a> {$/;"	s
Info	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub struct Info(pub String);$/;"	s
Inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^struct Inner {$/;"	s
Inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^struct Inner {$/;"	s
Inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^enum Inner {$/;"	g
Interleave	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^struct Interleave<I, J> {$/;"	s
IntoIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    type IntoIter = IntoIter<T>;$/;"	T
IntoIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    type IntoIter = Iter<'a, T>;$/;"	T
IntoIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub struct IntoIter<T> {$/;"	s
IntoIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    type IntoIter = IntoIter;$/;"	T
IntoIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub struct IntoIter {$/;"	s
Item	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/help.rs	/^    type Item = &'a str;$/;"	T
Item	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    type Item = T;$/;"	T
Item	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^    type Item = I::Item;$/;"	T
Item	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    type Item = &'a T;$/;"	T
Item	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    type Item = Result<DirEntry>;$/;"	T
Iter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub struct Iter<'a, T: 'a> {$/;"	s
K32	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub const K32: [u32; 64] = [$/;"	c
K32X4	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub const K32X4: [[u32; 4]; 16] = [$/;"	c
K64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub const K64: [u64; 80] = [$/;"	c
K64X2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub const K64X2: [[u64; 2]; 40] = [$/;"	c
Key	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^pub struct Key<'k> {$/;"	s
KeyValues	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^struct KeyValues<'a>(&'a dyn kv::Source);$/;"	s
LAP	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^const LAP: usize = 32;$/;"	c
LEVEL_PARSE_ERROR	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^static LEVEL_PARSE_ERROR: &str =$/;"	c
LOG_LEVEL_NAMES	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^static LOG_LEVEL_NAMES: [&str; 6] = ["OFF", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"];$/;"	c
Level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub enum Level {$/;"	g
LevelEnum	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^        struct LevelEnum;$/;"	s
LevelFilter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub enum LevelFilter {$/;"	g
LevelFilterEnum	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^        struct LevelFilterEnum;$/;"	s
LevelFilterIdentifier	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^        struct LevelFilterIdentifier;$/;"	s
LevelIdentifier	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^        struct LevelIdentifier;$/;"	s
Line	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^pub enum Line<'a, T: ?Sized> {$/;"	g
LineDisplay	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^struct LineDisplay<'a, T: ?Sized> {$/;"	s
LineIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^pub struct LineIter<'a, T: ?Sized>(&'a T);$/;"	s
List	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct List;$/;"	s
ListAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^pub struct ListAction<'a, T: 'a> {$/;"	s
ListToken	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^pub struct ListToken {$/;"	s
Log	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub trait Log: Sync + Send {$/;"	t
MARK_BIT	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^const MARK_BIT: usize = 1;$/;"	c
MAX_LEVEL_INNER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Debug;$/;"	c
MAX_LEVEL_INNER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Error;$/;"	c
MAX_LEVEL_INNER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Info;$/;"	c
MAX_LEVEL_INNER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Off;$/;"	c
MAX_LEVEL_INNER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Trace;$/;"	c
MAX_LEVEL_INNER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Warn;$/;"	c
MAX_LOG_LEVEL_FILTER	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^static MAX_LOG_LEVEL_FILTER: AtomicUsize = AtomicUsize::new(0);$/;"	c
MAX_RESPONSE_SIZE	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/search.rs	/^const MAX_RESPONSE_SIZE: usize = 1500;$/;"	c
MESSAGE	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^const MESSAGE: mio::Token = mio::Token(1);$/;"	c
MESSAGE_HEAD	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^const MESSAGE_HEAD: &'static str = r#"<?xml version="1.0"?>$/;"	c
MESSAGE_TAIL	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^const MESSAGE_TAIL: &'static str = r#"<\/s:Body>$/;"	c
MSG	/home/mimerme/takeetoes/src/takeetoe.rs	/^const MSG : u8 = 0x04;          \/\/A test message$/;"	c
MaybeStaticStr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^enum MaybeStaticStr<'a> {$/;"	g
MergeOptions	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^pub struct MergeOptions {$/;"	s
MergeRange	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^enum MergeRange<'ancestor, 'ours, 'theirs, T: ?Sized> {$/;"	g
MetaEvent	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^pub enum MetaEvent {$/;"	g
Metadata	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub struct Metadata<'a> {$/;"	s
MetadataBuilder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub struct MetadataBuilder<'a> {$/;"	s
MetadataKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum MetadataKind {$/;"	g
ModifyKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum ModifyKind {$/;"	g
NOP	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        static NOP: NopLogger = NopLogger;$/;"	c
NO_NEWLINE_AT_EOF	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^const NO_NEWLINE_AT_EOF: &str = "\\\\ No newline at end of file";$/;"	c
NetOp	/home/mimerme/takeetoes/src/net.rs	/^enum NetOp {$/;"	g
NeverToken	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^pub type NeverToken = ();$/;"	T
NodeProtocol	/home/mimerme/takeetoes/src/client.rs	/^pub trait NodeProtocol {$/;"	t
NopLogger	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^struct NopLogger;$/;"	s
NullWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/null.rs	/^pub struct NullWatcher;$/;"	s
OPTION_WIDTH	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^static OPTION_WIDTH: usize = 24;$/;"	c
OnePair	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        struct OnePair {$/;"	s
Operation	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub struct Operation(usize);$/;"	s
Output	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^    type Output = usize;$/;"	T
OutputSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    type OutputSize = U28;$/;"	T
OutputSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    type OutputSize = U32;$/;"	T
OutputSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    type OutputSize = U28;$/;"	T
OutputSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    type OutputSize = U32;$/;"	T
OutputSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    type OutputSize = U48;$/;"	T
OutputSize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    type OutputSize = U64;$/;"	T
PATCH	/home/mimerme/takeetoes/src/takeetoe.rs	/^const PATCH : u8 = 0x69;$/;"	c
PING	/home/mimerme/takeetoes/src/takeetoe.rs	/^const PING : u8 = 0x06;         \/\/PING a node$/;"	c
PONG	/home/mimerme/takeetoes/src/takeetoe.rs	/^const PONG : u8 = 0x07;         \/\/response to a PING with PONG$/;"	c
PROJ	/home/mimerme/takeetoes/src/takeetoe.rs	/^const PROJ : u8 = 0x08;         \/\/Used for verifying project structures and file contents$/;"	c
PROJ_VER	/home/mimerme/takeetoes/src/takeetoe.rs	/^const PROJ_VER : u8 = 0x09;     \/\/Used for responding to project and file verifications$/;"	c
Packet	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^struct Packet<T> {$/;"	s
Parse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct Parse;$/;"	s
ParseAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^pub struct ParseAction<'a, T: 'a> {$/;"	s
ParseCollect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct ParseCollect;$/;"	s
ParseLevelError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub struct ParseLevelError(());$/;"	s
ParseList	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct ParseList;$/;"	s
ParseListAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^pub struct ParseListAction<'a, T: 'a> {$/;"	s
ParseOption	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct ParseOption;$/;"	s
ParseOptionAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^pub struct ParseOptionAction<'a, T: 'a> {$/;"	s
ParsePatchError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^pub struct ParsePatchError(Cow<'static, str>);$/;"	s
ParseResult	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^pub enum ParseResult {$/;"	g
Parser	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^struct Parser<'a, T: Text + ?Sized> {$/;"	s
Patch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^pub struct Patch<'a, T: ToOwned + ?Sized> {$/;"	s
PatchDisplay	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^struct PatchDisplay<'a, T: ToOwned + ?Sized> {$/;"	s
PatchFormatter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^pub struct PatchFormatter {$/;"	s
PathData	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^struct PathData {$/;"	s
Pattern	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^pub struct Pattern<'c> {$/;"	s
PollWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^pub struct PollWatcher {$/;"	s
PortMappingEntry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub struct PortMappingEntry {$/;"	s
PortMappingProtocol	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/lib.rs	/^pub enum PortMappingProtocol {$/;"	g
Position	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^struct Position<T> {$/;"	s
Print	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct Print(pub String);$/;"	s
ProcessID	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub struct ProcessID(pub u32);$/;"	s
PushConst	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct PushConst<T>(pub T);$/;"	s
PushConstAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^pub struct PushConstAction<'a, T: 'a> {$/;"	s
READ	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^const READ: usize = 2;$/;"	c
RNG	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^        static RNG: Cell<Wrapping<u32>> = Cell::new(Wrapping(1406868647));$/;"	c
Range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^pub struct Range<'a, T: ?Sized> {$/;"	s
RangeBounds	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^pub trait RangeBounds: Sized + Clone + Debug {$/;"	t
ReadData	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^struct ReadData {$/;"	s
ReadDirectoryChangesServer	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^struct ReadDirectoryChangesServer {$/;"	s
ReadDirectoryChangesWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^pub struct ReadDirectoryChangesWatcher {$/;"	s
ReadDirectoryRequest	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^struct ReadDirectoryRequest {$/;"	s
ReadyTimeoutError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub struct ReadyTimeoutError;$/;"	s
Receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^pub struct Receiver<C> {$/;"	s
Receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^pub struct Receiver<'a, T: 'a>(&'a Channel<T>);$/;"	s
Receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^pub struct Receiver<'a, T: 'a>(&'a Channel<T>);$/;"	s
Receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^pub struct Receiver<'a, T: 'a>(&'a Channel<T>);$/;"	s
ReceiverFlavor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^enum ReceiverFlavor<T> {$/;"	g
RecommendedWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^pub type RecommendedWatcher = FsEventWatcher;$/;"	T
RecommendedWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^pub type RecommendedWatcher = INotifyWatcher;$/;"	T
RecommendedWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^pub type RecommendedWatcher = PollWatcher;$/;"	T
RecommendedWatcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^pub type RecommendedWatcher = ReadDirectoryChangesWatcher;$/;"	T
Record	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub struct Record<'a> {$/;"	s
RecordBuilder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub struct RecordBuilder<'a> {$/;"	s
RecursiveMode	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/config.rs	/^pub enum RecursiveMode {$/;"	g
RecursiveResults	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub struct RecursiveResults {$/;"	s
RecvError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub struct RecvError;$/;"	s
RecvTimeoutError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub enum RecvTimeoutError {$/;"	g
Ref	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^pub struct Ref<'parser:'refer, 'refer, T: 'parser> {$/;"	s
RemoveKind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum RemoveKind {$/;"	g
RemovePortError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum RemovePortError {$/;"	g
RenameMode	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub enum RenameMode {$/;"	g
RequestError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum RequestError {$/;"	g
RequestReponse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub struct RequestReponse {$/;"	s
RequestResult	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub type RequestResult = Result<RequestReponse, RequestError>;$/;"	T
Result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^type Result<T, E = ParsePatchError> = std::result::Result<T, E>;$/;"	T
Result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^type Result<A> = result::Result<A, HexStringError>;$/;"	T
Result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub type Result<T = ()> = std::result::Result<T, Error>;$/;"	T
Result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	T
Result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	T
Result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub type Result<T> = result::Result<T, Box<dyn error::Error + Send + Sync>>;$/;"	T
SEARCH_REQUEST	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub const SEARCH_REQUEST: &'static str = "M-SEARCH * HTTP\/1.1\\r$/;"	c
SET_LOGGER_ERROR	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^static SET_LOGGER_ERROR: &str = "attempted to set a logger after the logging system \\$/;"	c
SHIFT	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^const SHIFT: usize = 1;$/;"	c
START_SYNC	/home/mimerme/takeetoes/src/takeetoe.rs	/^const START_SYNC : u8 = 0x10;   \/\/Specify which file to syncronize$/;"	c
STATE	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^static STATE: AtomicUsize = AtomicUsize::new(0);$/;"	c
STATE_LEN	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/consts.rs	/^pub const STATE_LEN: usize = 8;$/;"	c
STATIC_MAX_LEVEL	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub const STATIC_MAX_LEVEL: LevelFilter = MAX_LEVEL_INNER;$/;"	c
STOP_SYNC	/home/mimerme/takeetoes/src/takeetoe.rs	/^const STOP_SYNC : u8 = 0x13;    \/\/Alerts a peer node to stop listening for syncronization packets$/;"	c
SYNC_ADD	/home/mimerme/takeetoes/src/takeetoe.rs	/^const SYNC_ADD : u8 = 0x14;     \/\/Send the data to syncronize$/;"	c
SYNC_REM	/home/mimerme/takeetoes/src/takeetoe.rs	/^const SYNC_REM : u8 = 0x12;     \/\/Send the data to syncronize$/;"	c
SYNC_SAME	/home/mimerme/takeetoes/src/takeetoe.rs	/^const SYNC_SAME : u8 = 0x11;    \/\/Send the data to syncronize$/;"	c
SearchError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^pub enum SearchError {$/;"	g
SearchOptions	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/options.rs	/^pub struct SearchOptions {$/;"	s
Select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub struct Select<'a> {$/;"	s
SelectHandle	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub trait SelectHandle {$/;"	t
SelectTimeoutError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub struct SelectTimeoutError;$/;"	s
Selected	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub enum Selected {$/;"	g
SelectedOperation	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub struct SelectedOperation<'a> {$/;"	s
SendError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub struct SendError<T>(pub T);$/;"	s
SendTimeoutError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub enum SendTimeoutError<T> {$/;"	g
Sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^pub struct Sender<C> {$/;"	s
Sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^pub struct Sender<'a, T: 'a>(&'a Channel<T>);$/;"	s
Sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^pub struct Sender<'a, T: 'a>(&'a Channel<T>);$/;"	s
Sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^pub struct Sender<'a, T: 'a>(&'a Channel<T>);$/;"	s
SenderFlavor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^enum SenderFlavor<T> {$/;"	g
SetLoggerError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub struct SetLoggerError(());$/;"	s
Sha224	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^pub struct Sha224 {$/;"	s
Sha256	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^pub struct Sha256 {$/;"	s
Sha384	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^pub struct Sha384 {$/;"	s
Sha512	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^pub struct Sha512 {$/;"	s
Sha512Trunc224	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^pub struct Sha512Trunc224 {$/;"	s
Sha512Trunc256	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^pub struct Sha512Trunc256 {$/;"	s
SliceLike	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^pub trait SliceLike: ops::Index<ops::Range<usize>> {$/;"	t
Slot	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^struct Slot<T> {$/;"	s
Slot	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^struct Slot<T> {$/;"	s
Slot	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^pub struct Slot<'s, 'f> {$/;"	s
Snake	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^struct Snake {$/;"	s
Source	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^pub trait Source {$/;"	t
Source	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub struct Source(pub String);$/;"	s
Spinlock	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^pub struct Spinlock<T> {$/;"	s
SpinlockGuard	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^pub struct SpinlockGuard<'a, T: 'a> {$/;"	s
Store	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct Store;$/;"	s
StoreAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^pub struct StoreAction<'a, T: 'a> {$/;"	s
StoreConst	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct StoreConst<T>(pub T);$/;"	s
StoreConstAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^pub struct StoreConstAction<'a, T: 'a> {$/;"	s
StoreFalse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct StoreFalse;$/;"	s
StoreOption	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct StoreOption;$/;"	s
StoreOptionAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^pub struct StoreOptionAction<'a, T: 'a> {$/;"	s
StoreTrue	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^pub struct StoreTrue;$/;"	s
StreamContextInfo	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^struct StreamContextInfo {$/;"	s
SvalVisitor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        struct SvalVisitor<'a, 'b: 'a>(&'a mut sval::value::Stream<'b>);$/;"	s
SyncWaker	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^pub struct SyncWaker {$/;"	s
THREAD_ID	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^        static THREAD_ID: ThreadId = thread::current().id();$/;"	c
TOTAL_WIDTH	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^static TOTAL_WIDTH: usize = 79;$/;"	c
TRIES	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^        static TRIES: usize = 100;$/;"	c
TakeetoeNode	/home/mimerme/takeetoes/src/client.rs	/^pub struct TakeetoeNode$/;"	s
TakeetoeNode	/home/mimerme/takeetoes/src/takeetoe_old.rs	/^pub struct TakeetoeNode$/;"	s
TakeetoeProtocol	/home/mimerme/takeetoes/src/client.rs	/^pub struct TakeetoeProtocol {$/;"	s
Target	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    type Target = C;$/;"	T
Target	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^    type Target = T;$/;"	T
Target	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    type Target = T;$/;"	T
TempDir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^pub struct TempDir(PathBuf);$/;"	s
TestEnv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    struct TestEnv<'a> {$/;"	s
TestFill	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^        struct TestFill;$/;"	s
TestSval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        struct TestSval;$/;"	s
TestVisitor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^        struct TestVisitor(Option<Token>);$/;"	s
TestVisitor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^        struct TestVisitor {$/;"	s
Text	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^pub trait Text: Eq + Hash {$/;"	t
TickToken	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^pub type TickToken = Option<Instant>;$/;"	T
Timeout	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^enum Timeout {$/;"	g
ToKey	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^pub trait ToKey {$/;"	t
ToValue	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/mod.rs	/^pub trait ToValue {$/;"	t
Token	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub struct Token {$/;"	s
Tracker	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^pub struct Tracker(pub usize);$/;"	s
TryIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub struct TryIter<'a, T: 'a> {$/;"	s
TryReadyError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub struct TryReadyError;$/;"	s
TryRecvError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub enum TryRecvError {$/;"	g
TrySelectError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub struct TrySelectError;$/;"	s
TrySendError	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^pub enum TrySendError<T> {$/;"	g
TypeIds	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^                struct TypeIds;$/;"	s
TypedAction	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^pub trait TypedAction<T> {$/;"	t
UNINITIALIZED	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^const UNINITIALIZED: usize = 0;$/;"	c
V	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^struct V {$/;"	s
Value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/mod.rs	/^pub struct Value<'v> {$/;"	s
Value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^            type Value = Level;$/;"	T
Value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^            type Value = LevelFilter;$/;"	T
Var	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^pub struct Var {$/;"	s
Visitor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^pub trait Visitor<'kvs> {$/;"	t
WRITE	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^const WRITE: usize = 1;$/;"	c
Waker	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^pub struct Waker {$/;"	s
WalkDir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^pub struct WalkDir {$/;"	s
WalkDirOptions	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^struct WalkDirOptions {$/;"	s
WatchData	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^struct WatchData {$/;"	s
WatchState	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^struct WatchState {$/;"	s
Watcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^pub trait Watcher: Sized {$/;"	t
WordsIter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/help.rs	/^struct WordsIter<'a> {$/;"	s
ZeroToken	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^pub type ZeroToken = usize;$/;"	T
_LEN	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select_macro.rs	/^        const _LEN: usize = crossbeam_channel_internal!(@count ($($cases)*));$/;"	c
__log_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! __log_file {$/;"	d
__log_format_args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! __log_format_args {$/;"	d
__log_line	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! __log_line {$/;"	d
__log_module_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! __log_module_path {$/;"	d
__private_api_enabled	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn __private_api_enabled(level: Level, target: &str) -> bool {$/;"	f
__private_api_log	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn __private_api_log($/;"	f
__private_api_log_lit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn __private_api_log_lit($/;"	f
_check	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn _check(_: &dyn Source) {}$/;"	f
_check	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn _check(_: &dyn Visitor) {}$/;"	f
abs_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn abs_path(&self, path: &'b Path) -> PathBuf {$/;"	f
abs_pattern	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn abs_pattern(pattern: &str, root: &Path, anchored: bool) -> String {$/;"	f
abs_pattern_anchored	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn abs_pattern_anchored(pattern: &str, root: &Path) -> String {$/;"	f
abs_pattern_unanchored	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn abs_pattern_unanchored(pattern: &str) -> String {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool {$/;"	f
accept	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool;$/;"	f
acquire	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    pub fn acquire(&self) -> Receiver<C> {$/;"	f
acquire	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    pub fn acquire(&self) -> Sender<C> {$/;"	f
add	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn add(a: [u32; 4], b: [u32; 4]) -> [u32; 4] {$/;"	f
add	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^fn add(a: [u64; 2], b: [u64; 2]) -> [u64; 2] {$/;"	f
add_any_port	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    pub fn add_any_port($/;"	f
add_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn add_argument<'x, A: TypedAction<T>>(&'x mut self,$/;"	f
add_conflict_marker	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn add_conflict_marker($/;"	f
add_conflict_marker_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn add_conflict_marker_bytes($/;"	f
add_option	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn add_option<'x, A: TypedAction<T>>(&'x mut self,$/;"	f
add_option	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn add_option<F:IFlagAction + 'parser>(&mut self,$/;"	f
add_option_for	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn add_option_for(&mut self, var: Option<usize>,$/;"	f
add_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn add_path(mut self, path: PathBuf) -> Self {$/;"	f
add_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn add_path(mut self, path: PathBuf) -> Self {$/;"	f
add_port	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    pub fn add_port($/;"	f
add_port_mapping	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    fn add_port_mapping($/;"	f
add_random_port_mapping	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    fn add_random_port_mapping($/;"	f
add_same_port_mapping	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    fn add_same_port_mapping($/;"	f
add_single_watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn add_single_watch($/;"	f
add_some_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn add_some_path(self, path: Option<PathBuf>) -> Self {$/;"	f
add_watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn add_watch(&mut self, path: PathBuf, is_recursive: bool, mut watch_self: bool) -> Result<()> {$/;"	f
add_watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn add_watch(&mut self, path: PathBuf, is_recursive: bool) -> Result<PathBuf> {$/;"	f
add_watch_by_event	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^fn add_watch_by_event($/;"	f
after	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub fn after(duration: Duration) -> Receiver<Instant> {$/;"	f
append_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn append_path<P: AsRef<Path>>($/;"	f
apply	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^pub fn apply(base_image: &str, patch: &Patch<'_, str>) -> Result<String, ApplyError> {$/;"	f
apply_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^pub fn apply_bytes(base_image: &[u8], patch: &Patch<'_, [u8]>) -> Result<Vec<u8>, ApplyError> {$/;"	f
apply_hunk	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^fn apply_hunk<'a, T: PartialEq + ?Sized>($/;"	f
args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn args(&mut self, args: fmt::Arguments<'a>) -> &mut RecordBuilder<'a> {$/;"	f
args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn args(&self) -> &fmt::Arguments<'a> {$/;"	f
as_arg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn as_arg(&self) -> proc_macro2::TokenStream {$/;"	f
as_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	f
as_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    pub fn as_bytes(&self) -> Vec<u8> {$/;"	f
as_init	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn as_init(&self) -> proc_macro2::TokenStream {$/;"	f
as_ref	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn as_ref(&self) -> &T {$/;"	f
as_ref	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn as_ref(&self) -> &str {$/;"	f
as_slice	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn as_slice(&self, range: ops::Range<usize>) -> &Self;$/;"	f
as_slice	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn as_slice(&self, range: ops::Range<usize>) -> &[T] {$/;"	f
as_slice	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn as_slice(&self, range: ops::Range<usize>) -> &str {$/;"	f
as_slice	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn as_slice(&self) -> &'a T {$/;"	f
as_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn as_str(&self) -> Option<&str> {$/;"	f
as_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn as_str(&self) -> Option<&str>;$/;"	f
as_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_string	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    pub fn as_string(&self) -> String {$/;"	f
as_tokens	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn as_tokens(&self) -> proc_macro2::TokenStream {$/;"	f
assert_diff	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^macro_rules! assert_diff {$/;"	d
assert_diff_range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^macro_rules! assert_diff_range {$/;"	d
assert_merge	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/tests.rs	/^macro_rules! assert_merge {$/;"	d
assert_no_errors	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn assert_no_errors(&self) {$/;"	f
assert_patch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^macro_rules! assert_patch {$/;"	d
assert_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^    fn assert_send<T: Send>() {}$/;"	f
assert_sync	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^    fn assert_sync<T: Sync>() {}$/;"	f
attr_serde	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^mod attr_serde {$/;"	m
bench_file_match	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn bench_file_match(b: &mut Bencher) {$/;"	f
bench_new_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn bench_new_file(b: &mut Bencher) {$/;"	f
bench_pattern_match	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn bench_pattern_match(b: &mut Bencher) {$/;"	f
bench_pattern_new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn bench_pattern_new(b: &mut Bencher) {$/;"	f
big_sigma0	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^    macro_rules! big_sigma0 {$/;"	d
big_sigma0	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    macro_rules! big_sigma0 {$/;"	d
big_sigma1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^    macro_rules! big_sigma1 {$/;"	d
big_sigma1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    macro_rules! big_sigma1 {$/;"	d
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^    fn bind<'x>(&self, Rc<RefCell<&'x mut T>>) -> Action<'x>;$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/bool.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut bool>>) -> Action<'x> {$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut Option<T>>>) -> Action<'x> {$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut T>>) -> Action<'x> {$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut Vec<T>>>) -> Action<'x> {$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut Option<T>>>) -> Action<'x> {$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut T>>) -> Action<'x> {$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut Vec<T>>>) -> Action<'x> {$/;"	f
bind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/num.rs	/^    fn bind<'x>(&self, cell: Rc<RefCell<&'x mut T>>) -> Action<'x> {$/;"	f
bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	f
bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	f
bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn bool(&mut self, v: bool) -> Result<(), Error>;$/;"	f
bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	f
bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        fn bool(&mut self, v: bool) -> sval::stream::Result {$/;"	f
bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn bool(&mut self, v: bool) -> Result<(), Error> {$/;"	f
bool3ary_202	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^    macro_rules! bool3ary_202 {$/;"	d
bool3ary_202	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    macro_rules! bool3ary_202 {$/;"	d
bool3ary_232	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^    macro_rules! bool3ary_232 {$/;"	d
bool3ary_232	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    macro_rules! bool3ary_232 {$/;"	d
borrow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn borrow(&self) -> &str {$/;"	f
borrowed_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn borrowed_str(&mut self, v: &'v str) -> Result<(), Error> {$/;"	f
borrowed_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn borrowed_str(&mut self, v: &'v str) -> Result<(), Error> {$/;"	f
boundary_down	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^        fn boundary_down(text: &str, pos: usize) -> usize {$/;"	f
boundary_up	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^        fn boundary_up(text: &str, pos: usize) -> usize {$/;"	f
bounded	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub fn bounded<T>(cap: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
boxed	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^        pub fn boxed<E>(err: E) -> Self$/;"	f
btree_map	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn btree_map() {$/;"	f
build	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn build(&self) -> Metadata<'a> {$/;"	f
build	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn build(&self) -> Record<'a> {$/;"	f
build_edit_script	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^fn build_edit_script<T>(solution: &[DiffRange<[T]>]) -> Vec<EditRange> {$/;"	f
builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn builder() -> MetadataBuilder<'a> {$/;"	f
builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn builder() -> RecordBuilder<'a> {$/;"	f
byte_repr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    fn byte_repr() -> Vec<u8> { vec![203, 187, 198, 225, 155, 230, 62, 252, 221, 120, 50, 125, 45, 248, 80, 217, 35, 117, 175, 106, 3, 147, 79, 53, 228, 123, 208, 45, 27, 73, 108, 12] }$/;"	f
calc_end	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^fn calc_end($/;"	f
callback	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^pub extern "C" fn callback($/;"	f
callback_impl	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^unsafe fn callback_impl($/;"	f
can_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn can_select(&self) -> bool {$/;"	f
capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
cast	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn cast(self) -> Cast<'v> {$/;"	f
cause	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    fn cause(&self) -> Option<&dyn error::Error> {$/;"	f
cause	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/error.rs	/^    fn cause(&self) -> Option<&error::Error> {$/;"	f
cause	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    fn cause(&self) -> Option<&dyn StdError> {$/;"	f
cause	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn cause(&self) -> Option<&dyn error::Error> {$/;"	f
channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn channel(&self) -> mio_extras::channel::Sender<EventLoopMsg> {$/;"	f
char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn char(&mut self, v: char) -> Result<(), Error> {$/;"	f
char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn char(&mut self, v: char) -> Result<(), Error> {$/;"	f
char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn char(&mut self, v: char) -> Result<(), Error>;$/;"	f
char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn char(&mut self, v: char) -> Result<(), Error> {$/;"	f
char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        fn char(&mut self, v: char) -> sval::stream::Result {$/;"	f
char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn char(&mut self, v: char) -> Result<(), Error> {$/;"	f
check	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn check(name: &str) -> ArgumentKind {$/;"	f
check_err	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_parser.rs	/^pub fn check_err(ap: &ArgumentParser, args: &[&str]) {$/;"	f
check_exit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_parser.rs	/^pub fn check_exit(ap: &ArgumentParser, args: &[&str]) {$/;"	f
check_loop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn check_loop<P: AsRef<Path>>(&self, child: P) -> Result<()> {$/;"	f
check_ok	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_parser.rs	/^pub fn check_ok(ap: &ArgumentParser, args: &[&str]) {$/;"	f
check_required	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn check_required(&mut self) -> ParseResult {$/;"	f
classify	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn classify(&mut self, record: &'a T) -> u64 {$/;"	f
classify_lines	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    pub fn classify_lines(&mut self, text: &'a T) -> (Vec<&'a T>, Vec<u64>) {$/;"	f
cleanup_conflicts	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn cleanup_conflicts<'ancestor, 'ours, 'theirs, T: ?Sized + SliceLike + PartialEq>($/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn clone(&self) -> Select<'a> {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn clone(&self) -> Level {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn clone(&self) -> LevelFilter {$/;"	f
clone	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn clone(&self) -> DirEntry {$/;"	f
close	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn close(&mut self) {$/;"	f
cmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn cmp(&self, other: &Self) -> cmp::Ordering {$/;"	f
cmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn cmp(&self, other: &Level) -> cmp::Ordering {$/;"	f
cmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn cmp(&self, other: &LevelFilter) -> cmp::Ordering {$/;"	f
collect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn collect(args: &[&str]) -> Vec<isize> {$/;"	f
collect_parent_lint_attrs	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^fn collect_parent_lint_attrs(attrs: &[syn::Attribute]) -> Vec<syn::Attribute> {$/;"	f
common_overlap_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_overlap_len(&self, mut other: &str) -> usize {$/;"	f
common_overlap_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_overlap_len(&self, other: &Self) -> usize;$/;"	f
common_overlap_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_overlap_len(&self, other: &[T]) -> usize {$/;"	f
common_overlap_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn common_overlap_len(&self, other: Range<'_, T>) -> usize {$/;"	f
common_prefix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_prefix_len(&self, other: &Self) -> usize;$/;"	f
common_prefix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_prefix_len(&self, other: &[T]) -> usize {$/;"	f
common_prefix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_prefix_len(&self, other: &str) -> usize {$/;"	f
common_prefix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn common_prefix_len(&self, other: Range<'_, T>) -> usize {$/;"	f
common_suffix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_suffix_len(&self, other: &Self) -> usize;$/;"	f
common_suffix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_suffix_len(&self, other: &[T]) -> usize {$/;"	f
common_suffix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn common_suffix_len(&self, other: &str) -> usize {$/;"	f
common_suffix_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn common_suffix_len(&self, other: Range<'_, T>) -> usize {$/;"	f
compact	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/cleanup.rs	/^pub fn compact<'a, 'b, T: ?Sized + SliceLike>(diffs: &mut Vec<DiffRange<'a, 'b, T>>) {$/;"	f
compress	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^        fn compress(state: &mut [u32; 8], blocks: &[[u8; 64]]) {$/;"	f
compress	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/aarch64.rs	/^pub fn compress(state: &mut [u32; 8], blocks: &[[u8; 64]]) {$/;"	f
compress	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^pub fn compress(state: &mut [u32; 8], blocks: &[[u8; 64]]) {$/;"	f
compress	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/x86.rs	/^pub fn compress(state: &mut [u32; 8], blocks: &[[u8; 64]]) {$/;"	f
compress	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^        fn compress(state: &mut [u64; 8], blocks: &[[u8; 128]]) {$/;"	f
compress	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^pub fn compress(state: &mut [u64; 8], blocks: &[[u8; 128]]) {$/;"	f
compress256	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^pub fn compress256(state: &mut [u32; 8], blocks: &[GenericArray<u8, U64>]) {$/;"	f
compress512	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^pub fn compress512(state: &mut [u64; 8], blocks: &[GenericArray<u8, U128>]) {$/;"	f
configure	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn configure(&mut self, config: Config) -> Result<bool> {$/;"	f
configure	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn configure(&mut self, config: Config) -> Result<bool> {$/;"	f
configure	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^    fn configure(&mut self, _option: Config) -> Result<bool> {$/;"	f
configure	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn configure(&mut self, config: Config) -> Result<bool> {$/;"	f
configure_raw_mode	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn configure_raw_mode(&mut self, _config: Config, tx: Sender<Result<bool>>) {$/;"	f
configure_raw_mode	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn configure_raw_mode(&mut self, _config: Config, tx: Sender<Result<bool>>) {$/;"	f
configure_raw_mode	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn configure_raw_mode(&mut self, _config: Config, tx: Sender<Result<bool>>) {$/;"	f
connect	/home/mimerme/takeetoes/src/net.rs	/^pub fn connect(connecting_ip : &str, binding_ip : &str){$/;"	f
conquer	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^fn conquer<'a, 'b, T: PartialEq>($/;"	f
contents_first	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn contents_first(mut self, yes: bool) -> Self {$/;"	f
contents_first	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn contents_first() {$/;"	f
convert_add_port_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn convert_add_port_error(err: RequestError) -> AddPortError {$/;"	f
convert_add_random_port_mapping_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn convert_add_random_port_mapping_error(error: RequestError) -> Option<AddAnyPortError> {$/;"	f
convert_add_same_port_mapping_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn convert_add_same_port_mapping_error(error: RequestError) -> AddAnyPortError {$/;"	f
convert_cow_to_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn convert_cow_to_str(cow: Cow<'_, [u8]>) -> Cow<'_, str> {$/;"	f
count	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn count(&self) -> usize {$/;"	f
count	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn count() {$/;"	f
count	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn count(&self) -> usize {$/;"	f
count	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn count() {$/;"	f
counter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    fn counter(&self) -> &Counter<C> {$/;"	f
create	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    pub fn create($/;"	f
create_merge_range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn create_merge_range<'ancestor, 'ours, 'theirs, T: ?Sized + SliceLike>($/;"	f
create_patch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    pub fn create_patch<'a>(&self, original: &'a str, modified: &'a str) -> Patch<'a, str> {$/;"	f
create_patch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^pub fn create_patch<'a>(original: &'a str, modified: &'a str) -> Patch<'a, str> {$/;"	f
create_patch_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    pub fn create_patch_bytes<'a>($/;"	f
create_patch_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^pub fn create_patch_bytes<'a>(original: &'a [u8], modified: &'a [u8]) -> Patch<'a, [u8]> {$/;"	f
crossbeam_channel_delegate	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select_macro.rs	/^macro_rules! crossbeam_channel_delegate {$/;"	d
crossbeam_channel_internal	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select_macro.rs	/^macro_rules! crossbeam_channel_internal {$/;"	d
current_thread_id	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^fn current_thread_id() -> ThreadId {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn deadline(&self) -> Option<Instant>;$/;"	f
debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn debug(&mut self, _: &dyn fmt::Debug) -> Result<(), Error> {$/;"	f
debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn debug(&mut self, v: &dyn fmt::Debug) -> Result<(), Error> {$/;"	f
debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn debug(&mut self, v: &dyn fmt::Debug) -> Result<(), Error>;$/;"	f
debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn debug(&mut self, v: &dyn fmt::Debug) -> Result<(), Error> {$/;"	f
debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn debug(&mut self, v: &dyn fmt::Debug) -> Result<(), Error> {$/;"	f
debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! debug {$/;"	d
decr_int	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn decr_int(args: &[&str]) -> isize {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn default() -> Select<'a> {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/options.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn default() -> Self {$/;"	f
default	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn default() -> Self {$/;"	f
depth	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn depth(&self) -> usize {$/;"	f
depth	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn depth(&self) -> usize {$/;"	f
deref	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    fn deref(&self) -> &C {$/;"	f
deref	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref_mut	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
derive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^pub fn derive(input: TokenStream) -> TokenStream {$/;"	f
description	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^            fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
destroy	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    unsafe fn destroy(this: *mut Block<T>, start: usize) {$/;"	f
device_num	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/util.rs	/^pub fn device_num<P: AsRef<Path>>(_: P) -> io::Result<u64> {$/;"	f
device_num	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/util.rs	/^pub fn device_num<P: AsRef<Path>>(path: P) -> io::Result<u64> {$/;"	f
diff	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    fn diff<'a>(&self, original: &'a str, modified: &'a str) -> Vec<Diff<'a, str>> {$/;"	f
diff	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^fn diff<'a>(original: &'a str, modified: &'a str) -> Vec<Diff<'a, str>> {$/;"	f
diff	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^pub fn diff<'a, 'b, T: PartialEq>(old: &'a [T], new: &'b [T]) -> Vec<DiffRange<'a, 'b, [T]>> {$/;"	f
diff3_range_to_merge_range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn diff3_range_to_merge_range<'ancestor, 'ours, 'theirs, T: ?Sized + SliceLike>($/;"	f
diff_range_list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^macro_rules! diff_range_list {$/;"	d
diff_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn diff_str() {$/;"	f
digest_blocks	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/x86.rs	/^unsafe fn digest_blocks(state: &mut [u32; 8], blocks: &[[u8; 64]]) {$/;"	f
disconnect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn disconnect(&self) -> bool {$/;"	f
disconnect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn disconnect(&self) -> bool {$/;"	f
disconnect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn disconnect(&self) -> bool {$/;"	f
disconnect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn disconnect(&mut self) {$/;"	f
disconnect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn disconnect(&self) {$/;"	f
display	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn display(&mut self, v: &dyn fmt::Display) -> Result<(), Error> {$/;"	f
display	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn display(&mut self, v: &dyn fmt::Display) -> Result<(), Error> {$/;"	f
display_formatted_errors	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^fn display_formatted_errors() {$/;"	f
downcast_primitive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^                    fn downcast_primitive<'v, T: ?Sized>(&self, value: Erased<'v, T>) -> Option<Primitive<'v>> {$/;"	f
downcast_primitive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn downcast_primitive(self) -> Option<Primitive<'v>> {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    fn drop(&mut self) {$/;"	f
emit_event	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^fn emit_event(event_fn: &Mutex<dyn EventFn>, res: Result<Event>) {$/;"	f
emit_event	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^            fn emit_event(event_fn: &Mutex<dyn EventFn>, res: Result<Event>) {$/;"	f
empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn empty<'a>() -> &'a Self;$/;"	f
empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn empty<'a>() -> &'a [T] {$/;"	f
empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn empty<'a>() -> &'a str {$/;"	f
empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn empty() -> Range<'a, T> {$/;"	f
empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty() {$/;"	f
empty_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty_file() {$/;"	f
empty_file_follow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty_file_follow() {$/;"	f
empty_follow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn empty_follow() {$/;"	f
empty_on_heap	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn empty_on_heap() -> Box<Packet<T>> {$/;"	f
empty_on_stack	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn empty_on_stack() -> Packet<T> {$/;"	f
enabled	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn enabled(&self, _: &Metadata) -> bool {$/;"	f
enabled	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool;$/;"	f
end	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn end(&self) -> usize {$/;"	f
ends_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn ends_with(&self, suffix: &Self) -> bool {$/;"	f
ends_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn ends_with(&self, suffix: &Self) -> bool;$/;"	f
ends_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn ends_with(&self, suffix: &str) -> bool {$/;"	f
ends_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn ends_with(&self, suffix: Range<'_, T>) -> bool {$/;"	f
ends_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn ends_with(&self, suffix: &str) -> bool {$/;"	f
ends_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn ends_with(&self, suffix: &str) -> bool;$/;"	f
ents	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn ents(&self) -> &[DirEntry] {$/;"	f
envvar	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn envvar<'x>(&'x mut self, varname: &'parser str)$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn eq(&self, other: &GenericArgument<'a>) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn eq(&self, other: &GenericOption<'a>) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn eq(&self, other: &Var) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    fn eq(&self, other: &Receiver<C>) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    fn eq(&self, other: &Sender<C>) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/gateway.rs	/^    fn eq(&self, other: &Gateway) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn eq(&self, other: &Key<'ko>) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn eq(&self, other: &Level) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn eq(&self, other: &LevelFilter) -> bool {$/;"	f
eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq_ignore_ascii_case	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^fn eq_ignore_ascii_case(a: &str, b: &str) -> bool {$/;"	f
err	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^macro_rules! err {$/;"	d
error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn error(&self, command: &str, message: &str, writer: &mut Write) {$/;"	f
error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! error {$/;"	d
errs	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn errs(&self) -> &[Error] {$/;"	f
escaped_filename	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn escaped_filename<T: Text + ToOwned + ?Sized>(escaped: &T) -> Result<Cow<'_, [u8]>> {$/;"	f
event_loop_thread	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn event_loop_thread(mut self) {$/;"	f
expecting	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	f
f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	f
f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn f64(&mut self, v: f64) -> Result<(), Error>;$/;"	f
f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	f
f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        fn f64(&mut self, v: f64) -> sval::stream::Result {$/;"	f
f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn f64(&mut self, v: f64) -> Result<(), Error> {$/;"	f
file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn file(&mut self, file: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	f
file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn file(&self) -> Option<&'a str> {$/;"	f
file_is_excluded	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn file_is_excluded(&self, path: &'b Path) -> Result<bool, error::Error> {$/;"	f
file_name	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn file_name(&self) -> &OsStr {$/;"	f
file_static	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn file_static(&mut self, file: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	f
file_static	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn file_static(&self) -> Option<&'static str> {$/;"	f
file_type	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn file_type(&self) -> fs::FileType {$/;"	f
fill	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^            fn fill(&self, slot: &mut Slot) -> Result<(), Error> {$/;"	f
fill	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fill(&self, slot: &mut Slot) -> Result<(), Error> {$/;"	f
fill	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fill(&self, slot: &mut Slot) -> Result<(), Error>;$/;"	f
fill_any	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    pub fn fill_any<T>(&mut self, value: T) -> Result<(), Error>$/;"	f
fill_cast	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fill_cast() {$/;"	f
fill_debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fill_debug() {$/;"	f
fill_debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    pub fn fill_debug<T>(&mut self, value: T) -> Result<(), Error>$/;"	f
fill_display	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    pub fn fill_display<T>(&mut self, value: T) -> Result<(), Error>$/;"	f
fill_multiple_times_panics	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fill_multiple_times_panics() {$/;"	f
fill_sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    pub fn fill_sval<T>(&mut self, value: T) -> Result<(), Error>$/;"	f
fill_value_borrowed	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fill_value_borrowed() {$/;"	f
fill_value_owned	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fill_value_owned() {$/;"	f
filter_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^fn filter_dir(e: walkdir::Result<walkdir::DirEntry>) -> Option<walkdir::DirEntry> {$/;"	f
filter_entry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn filter_entry(self, predicate: P) -> FilterEntry<Self, P> {$/;"	f
filter_entry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn filter_entry<P>(self, predicate: P) -> FilterEntry<Self, P>$/;"	f
filter_entry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn filter_entry() {$/;"	f
finalize_into_dirty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn finalize_into_dirty(&mut self, out: &mut digest::Output<Self>) {$/;"	f
finalize_into_dirty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn finalize_into_dirty(&mut self, out: &mut digest::Output<Self>) {$/;"	f
find	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn find(&self, needle: &str) -> Option<usize> {$/;"	f
find	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn find(&self, needle: &str) -> Option<usize>;$/;"	f
find_byte	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^fn find_byte(haystack: &[u8], byte: u8) -> Option<usize> {$/;"	f
find_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^fn find_bytes(haystack: &[u8], needle: &[u8]) -> Option<usize> {$/;"	f
find_middle_snake	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^fn find_middle_snake<T: PartialEq>($/;"	f
find_position	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^fn find_position<T: PartialEq + ?Sized>($/;"	f
finish	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn finish(&mut self) {$/;"	f
finish	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn finish(&mut self) {$/;"	f
flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn flag(&self) -> Option<Flag> {$/;"	f
float_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn float_value() {$/;"	f
flush	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn flush(&self) {}$/;"	f
flush	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn flush(&self);$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    fn fmt(&self, f: &mut Formatter<'_>) -> Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/gateway.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn fmt($/;"	f
fmt_cast	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    fn fmt_cast() {$/;"	f
fmt_debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    fn fmt_debug() {$/;"	f
fmt_display	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    fn fmt_display() {$/;"	f
fmt_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    fn fmt_error(b: &u8) -> String {$/;"	f
fmt_hunk	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    fn fmt_hunk<'a>(&'a self, hunk: &'a Hunk<'a, str>) -> impl Display + 'a {$/;"	f
fmt_line	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    fn fmt_line<'a>(&'a self, line: &'a Line<'a, str>) -> impl Display + 'a {$/;"	f
fmt_patch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    pub fn fmt_patch<'a>(&'a self, patch: &'a Patch<'a, str>) -> impl Display + 'a {$/;"	f
follow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn follow(&self, mut dent: DirEntry) -> Result<DirEntry> {$/;"	f
follow_links	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn follow_links(mut self, yes: bool) -> Self {$/;"	f
for_each	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn for_each(&mut self, f: impl Fn(&mut Range<'_, T>)) {$/;"	f
format_add_any_port_mapping_message	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub fn format_add_any_port_mapping_message($/;"	f
format_add_port_mapping_message	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub fn format_add_port_mapping_message($/;"	f
format_delete_port_message	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub fn format_delete_port_message(schema: &Vec<String>, protocol: PortMappingProtocol, external_port: u16) -> String {$/;"	f
format_get_external_ip_message	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub fn format_get_external_ip_message() -> String {$/;"	f
format_message	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^fn format_message(body: String) -> String {$/;"	f
formate_get_generic_port_mapping_entry_message	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/messages.rs	/^pub fn formate_get_generic_port_mapping_entry_message(port_mapping_index: u32) -> String {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    fn from(err: RecvError) -> RecvTimeoutError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    fn from(err: RecvError) -> TryRecvError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    fn from(err: SendError<T>) -> SendTimeoutError<T> {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    fn from(err: SendError<T>) -> TrySendError<T> {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn from(val: usize) -> Selected {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    fn from(diff: DiffRange<'a, 'a, T>) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/error.rs	/^    fn from(error: glob::PatternError) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/error.rs	/^    fn from(error: io::Error) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(_err: tokio::time::Elapsed) -> SearchError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(_err: tokio::time::Error) -> RequestError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: AddAnyPortError) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: AddPortError) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: FromUtf8Error) -> RequestError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: GetExternalIpError) -> AddAnyPortError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: GetExternalIpError) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: RemovePortError) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: RequestError) -> AddAnyPortError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: RequestError) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: RequestError) -> GetGenericPortMappingEntryError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: SearchError) -> Error {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: attohttpc::Error) -> RequestError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: attohttpc::Error) -> SearchError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: http::Error) -> RequestError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: hyper::Error) -> RequestError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: hyper::Error) -> SearchError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: hyper::http::uri::InvalidUri) -> SearchError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: io::Error) -> GetExternalIpError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: io::Error) -> RequestError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: io::Error) -> SearchError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: str::Utf8Error) -> SearchError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn from(err: xmltree::ParseError) -> SearchError {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^        fn from(err: io::Error) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^    fn from(_: fmt::Error) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn from(s: &'k str) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^                fn from(value: $into_ty) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^    fn from(value: &'v str) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^    fn from(value: fmt::Arguments<'v>) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn from(v: &'v str) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn from(v: bool) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn from(v: char) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn from(v: f64) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn from(v: fmt::Arguments<'v>) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn from(v: i64) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn from(v: u64) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    fn from(err: crossbeam_channel::RecvError) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    fn from(err: crossbeam_channel::SendError<T>) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    fn from(err: io::Error) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    fn from(err: mio_extras::channel::SendError<T>) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    fn from(err: std::sync::PoisonError<T>) -> Self {$/;"	f
from	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn from(walk_err: Error) -> io::Error {$/;"	f
from_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/from_cli.rs	/^    fn from_argument(s: &str) -> Result<Self, String> {$/;"	f
from_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/lib.rs	/^    fn from_argument(s: &str) -> Result<Self, String>;$/;"	f
from_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn from_bytes(s: &'a [u8]) -> Result<Patch<'a, [u8]>, ParsePatchError> {$/;"	f
from_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    pub fn from_bytes(v: &Vec<u8>) -> HexString {$/;"	f
from_debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    pub fn from_debug<T>(value: &'v T) -> Self$/;"	f
from_display	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^    pub fn from_display<T>(value: &'v T) -> Self$/;"	f
from_event_fn	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn from_event_fn(event_fn: Arc<dyn EventFn>) -> Result<Self> {$/;"	f
from_event_fn	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn from_event_fn(event_fn: Box<dyn EventFn>) -> Result<Self> {$/;"	f
from_fill	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^    pub fn from_fill<T>(value: &'v T) -> Self$/;"	f
from_primitive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/mod.rs	/^    fn from_primitive<T>(value: T) -> Self$/;"	f
from_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_enum.rs	/^    fn from_str(src: &str) -> Result<Greeting, ()> {$/;"	f
from_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn from_str(s: &'a str) -> Result<Patch<'a, str>, ParsePatchError> {$/;"	f
from_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    pub fn from_str(key: &'k str) -> Self {$/;"	f
from_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn from_str(level: &str) -> Result<Level, Self::Err> {$/;"	f
from_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn from_str(level: &str) -> Result<LevelFilter, Self::Err> {$/;"	f
from_string	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    pub fn from_string(s: &str) -> Result<HexString> {$/;"	f
from_sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    fn from_sval(_: sval::value::Error) -> Self {$/;"	f
from_sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    pub fn from_sval<T>(value: &'v T) -> Self$/;"	f
from_usize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn from_usize(u: usize) -> Option<Level> {$/;"	f
from_usize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn from_usize(u: usize) -> Option<LevelFilter> {$/;"	f
function_context	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn function_context(&self) -> Option<&T> {$/;"	f
ge	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn ge(&self, other: &Level) -> bool {$/;"	f
ge	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn ge(&self, other: &LevelFilter) -> bool {$/;"	f
generic	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn generic(msg: &str) -> Self {$/;"	f
get	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn get(&self, bounds: impl RangeBounds) -> Option<Self> {$/;"	f
get	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn get() {$/;"	f
get	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn get() {$/;"	f
get	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn get(&self) -> &'a str {$/;"	f
get_any_address	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    pub fn get_any_address($/;"	f
get_control_urls	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/search.rs	/^fn get_control_urls(addr: &SocketAddrV4, root_url: &String) -> Result<(String, String), SearchError> {$/;"	f
get_deferred_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn get_deferred_dir(&mut self) -> Option<DirEntry> {$/;"	f
get_directory_hash	/home/mimerme/takeetoes/src/file.rs	/^fn get_directory_hash(project_dir : String, files :&mut HashMap<String, (String, String)>, output_files : bool) -> (Vec<u8>, Vec<u8>){$/;"	f
get_directory_hash	/home/mimerme/takeetoes/src/takeetoe.rs	/^fn get_directory_hash(project_dir : String, files :&mut HashMap<String, (String, String)>, output_files : bool) -> (Vec<u8>, Vec<u8>){$/;"	f
get_external_ip	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    pub fn get_external_ip(&self) -> Result<Ipv4Addr, GetExternalIpError> {$/;"	f
get_generic_port_mapping_entry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    pub fn get_generic_port_mapping_entry($/;"	f
get_schemas	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/search.rs	/^fn get_schemas(addr: &SocketAddrV4, control_schema_url: &String) -> Result<HashMap<String, Vec<String>>, SearchError> {$/;"	f
grow_down	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn grow_down(&mut self, adjust: usize) {$/;"	f
grow_up	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn grow_up(&mut self, adjust: usize) {$/;"	f
gt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn gt(&self, other: &Level) -> bool {$/;"	f
gt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn gt(&self, other: &LevelFilter) -> bool {$/;"	f
handle	/home/mimerme/takeetoes/src/client.rs	/^    fn handle(&mut self, data : u8) -> Vec<u8> {$/;"	f
handle	/home/mimerme/takeetoes/src/client.rs	/^    fn handle(&mut self, data : u8) -> Vec<u8>;$/;"	f
handle_broadcast_resp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/search.rs	/^fn handle_broadcast_resp(from: &SocketAddr, data: &[u8]) -> Result<(SocketAddr, String), SearchError> {$/;"	f
handle_connection	/home/mimerme/takeetoes/src/takeetoe_old.rs	/^    pub fn handle_connection<M>(&self, mut tcp_connection: TcpStream, mut message_handler : M) -> Result<(String, Sender<Vec<u8>>)> $/;"	f
handle_entry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn handle_entry($/;"	f
handle_event	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn handle_event(&mut self, event: &mio::Event) {$/;"	f
handle_inotify	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn handle_inotify(&mut self) {$/;"	f
handle_messages	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn handle_messages(&mut self) {$/;"	f
handle_stream	/home/mimerme/takeetoes/src/client.rs	/^fn handle_stream(mut stream : TcpStream){$/;"	f
has_attr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn has_attr(&self) -> bool {$/;"	f
hash	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn hash<H>(&self, state: &mut H) where H: Hasher {$/;"	f
hash	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/gateway.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	f
hash	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash_map	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn hash_map() {$/;"	f
hexchar_to_nibble	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^pub fn hexchar_to_nibble(c: &char) -> Result<u8> {$/;"	f
hook	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn hook<T>(r: &mut T) -> Operation {$/;"	f
hunk	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn hunk<'a, T: Text + ?Sized>(parser: &mut Parser<'a, T>) -> Result<Hunk<'a, T>> {$/;"	f
hunk_header	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn hunk_header<T: Text + ?Sized>(input: &T) -> Result<(HunkRange, HunkRange, Option<&T>)> {$/;"	f
hunk_lines	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn hunk_lines<'a, T: Text + ?Sized>(parser: &mut Parser<'a, T>) -> Result<Vec<Line<'a, T>>> {$/;"	f
hunk_lines_count	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^fn hunk_lines_count<T: ?Sized>(lines: &[Line<'_, T>]) -> (usize, usize) {$/;"	f
hunks	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn hunks(&self) -> &[Hunk<'_, T>] {$/;"	f
hunks	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn hunks<'a, T: Text + ?Sized>(parser: &mut Parser<'a, T>) -> Result<Vec<Hunk<'a, T>>> {$/;"	f
i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	f
i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	f
i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn i64(&mut self, v: i64) -> Result<(), Error>;$/;"	f
i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	f
i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        fn i64(&mut self, v: i64) -> sval::stream::Result {$/;"	f
i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn i64(&mut self, v: i64) -> Result<(), Error> {$/;"	f
immediate_watcher	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^pub fn immediate_watcher<F>(event_fn: F) -> Result<RecommendedWatcher>$/;"	f
imp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^        fn imp(src: &Path, link_name: &Path) -> io::Result<()> {$/;"	f
impl_into_owned	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^macro_rules! impl_into_owned {$/;"	d
included_files	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    pub fn included_files(&self) -> Result<Vec<PathBuf>, error::Error> {$/;"	f
incr_decr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_float.rs	/^fn incr_decr(args: &[&str]) -> f32 {$/;"	f
incr_int	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn incr_int(args: &[&str]) -> usize {$/;"	f
index	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn index(&self) -> usize {$/;"	f
index	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^    fn index(&self, index: isize) -> &Self::Output {$/;"	f
index	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn index(self, len: usize) -> (usize, usize) {$/;"	f
index_mut	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^    fn index_mut(&mut self, index: isize) -> &mut Self::Output {$/;"	f
info	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! info {$/;"	d
info	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn info(&self) -> Option<&String> {$/;"	f
inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^    fn inner(&self) -> &'a T {$/;"	f
inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn inner(&self) -> &'a T {$/;"	f
inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn inner(&self) -> Range<'tmp, T> {$/;"	f
ino	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn ino(&self) -> u64 {$/;"	f
ino	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn ino(&self) -> u64;$/;"	f
interleave	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^fn interleave<I, J>($/;"	f
internal	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/lib.rs	/^pub mod internal {$/;"	m
into	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn into(self) -> usize {$/;"	f
into_bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn into_bool(self) -> Option<bool> {$/;"	f
into_borrowed_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn into_borrowed_str(self) -> Option<&'v str> {$/;"	f
into_char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn into_char(self) -> Option<char> {$/;"	f
into_f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn into_f64(self) -> Option<f64> {$/;"	f
into_i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn into_i64(self) -> Option<i64> {$/;"	f
into_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^    fn into_inner(self) -> &'a T {$/;"	f
into_io_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn into_io_error(self) -> Option<io::Error> {$/;"	f
into_iter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn into_iter(self) -> IntoIter {$/;"	f
into_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn into_path(self) -> PathBuf {$/;"	f
into_primitive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn into_primitive(self) -> Primitive<'v> {$/;"	f
into_sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    fn into_sval(self) -> sval::value::Error {$/;"	f
into_u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn into_u64(self) -> Option<u64> {$/;"	f
invalid_config	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn invalid_config(config: &Config) -> Self {$/;"	f
io	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn io(err: io::Error) -> Self {$/;"	f
io_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn io_error(&self) -> Option<&io::Error> {$/;"	f
is_access	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn is_access(&self) -> bool {$/;"	f
is_cfg_attr_lint	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    fn is_cfg_attr_lint(item: &syn::Meta) -> bool {$/;"	f
is_create	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn is_create(&self) -> bool {$/;"	f
is_disconnected	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    pub fn is_disconnected(&self) -> bool {$/;"	f
is_disconnected	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn is_disconnected(&self) -> bool {$/;"	f
is_disconnected	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn is_disconnected(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn is_empty(&self) -> bool;$/;"	f
is_excluded	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    pub fn is_excluded(&self, path: &'b Path) -> Result<bool, error::Error> {$/;"	f
is_excluded	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    pub fn is_excluded(&self, path: &Path, directory: bool) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_hidden	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^fn is_hidden(entry: &DirEntry) -> bool {$/;"	f
is_lint	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    fn is_lint(item: &syn::Meta) -> bool {$/;"	f
is_modify	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn is_modify(&self) -> bool {$/;"	f
is_other	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn is_other(&self) -> bool {$/;"	f
is_patched	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^    fn is_patched(&self) -> bool {$/;"	f
is_phantom_data	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn is_phantom_data(&self) -> bool {$/;"	f
is_quoted	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn is_quoted<T: Text + ?Sized>(s: &T) -> Option<&T> {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn is_ready(&self) -> bool;$/;"	f
is_remove	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn is_remove(&self) -> bool {$/;"	f
is_running	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn is_running(&self) -> bool {$/;"	f
is_same	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn is_same(&self, child: &Handle) -> io::Result<bool> {$/;"	f
is_same_file_system	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn is_same_file_system(&mut self, dent: &DirEntry) -> Result<bool> {$/;"	f
is_timeout	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/err.rs	/^    pub fn is_timeout(&self) -> bool {$/;"	f
it_converts_bytes_to_string	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    fn it_converts_bytes_to_string() {$/;"	f
it_converts_string_to_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    fn it_converts_string_to_bytes() {$/;"	f
it_rejects_invalid_strings	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    fn it_rejects_invalid_strings() {$/;"	f
iter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn iter(&self) -> Iter<T> {$/;"	f
itry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^macro_rules! itry {$/;"	d
join	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn join<P: AsRef<Path>>(&self, path: P) -> PathBuf {$/;"	f
key_from_string	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn key_from_string() {$/;"	f
key_values	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn key_values(&mut self, kvs: &'a dyn kv::Source) -> &mut RecordBuilder<'a> {$/;"	f
key_values	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn key_values(&self) -> &dyn kv::Source {$/;"	f
le	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn le(&self, other: &Level) -> bool {$/;"	f
le	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn le(&self, other: &LevelFilter) -> bool {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn len(&self) -> usize;$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn len(&self) -> usize;$/;"	f
level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn level(&mut self, arg: Level) -> &mut MetadataBuilder<'a> {$/;"	f
level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn level(&mut self, level: Level) -> &mut RecordBuilder<'a> {$/;"	f
level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	f
level_bytes_tokens	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn level_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f
level_filter_bytes_tokens	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn level_filter_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f
level_filter_token	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn level_filter_token(variant: &'static str) -> Token {$/;"	f
level_token	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn level_token(variant: &'static str) -> Token {$/;"	f
line	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn line(&mut self, line: Option<u32>) -> &mut RecordBuilder<'a> {$/;"	f
line	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn line(&self) -> Option<u32> {$/;"	f
lines	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn lines(&self) -> &[Line<'a, T>] {$/;"	f
lines	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn lines(&self) -> LineIter<Self> {$/;"	f
lines	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn lines(&self) -> LineIter<Self>;$/;"	f
list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn list(args: &[&str]) -> Vec<isize> {$/;"	f
lock	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^    pub fn lock(&self) -> SpinlockGuard<'_, T> {$/;"	f
log	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn log(&self, _: &Record) {}$/;"	f
log	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn log(&self, record: &Record);$/;"	f
log	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! log {$/;"	d
log_enabled	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! log_enabled {$/;"	d
logger	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn logger() -> &'static dyn Log {$/;"	f
loop_ancestor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn loop_ancestor(&self) -> Option<&Path> {$/;"	f
lt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn lt(&self, other: &Level) -> bool {$/;"	f
lt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn lt(&self, other: &LevelFilter) -> bool {$/;"	f
main	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/bin/gitignore_check.rs	/^pub fn main() {$/;"	f
main	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/bin/gitignore_tree.rs	/^pub fn main() {$/;"	f
main	/home/mimerme/takeetoes/src/client.rs	/^fn main() -> Result<()>{$/;"	f
main	/home/mimerme/takeetoes/src/nat.rs	/^fn main() {$/;"	f
main	/home/mimerme/takeetoes/src/punch.rs	/^fn main(){$/;"	f
main	/home/mimerme/takeetoes/src/server.rs	/^fn main() {$/;"	f
main	/home/mimerme/takeetoes/src/takeetoe.rs	/^fn main() -> Result<()>{$/;"	f
main	/home/mimerme/takeetoes/src/takeetoe_old.rs	/^fn main() -> Result<()>{$/;"	f
many_dirs	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn many_dirs() {$/;"	f
many_files	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn many_files() {$/;"	f
many_mixed	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn many_mixed() {$/;"	f
match_fragment	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^fn match_fragment<T: PartialEq + ?Sized>($/;"	f
match_options	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn match_options(&self) -> glob::MatchOptions {$/;"	f
max	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn max() -> Level {$/;"	f
max	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn max() -> LevelFilter {$/;"	f
max_d	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^fn max_d(len1: usize, len2: usize) -> usize {$/;"	f
max_depth	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn max_depth(mut self, depth: usize) -> Self {$/;"	f
max_depth_0	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn max_depth_0() {$/;"	f
max_depth_1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn max_depth_1() {$/;"	f
max_depth_2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn max_depth_2() {$/;"	f
max_level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn max_level() -> LevelFilter {$/;"	f
max_open	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn max_open(mut self, mut n: usize) -> Self {$/;"	f
merge	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    pub fn merge<'a>($/;"	f
merge	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^pub fn merge<'a>(ancestor: &'a str, ours: &'a str, theirs: &'a str) -> Result<String, String> {$/;"	f
merge_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    pub fn merge_bytes<'a>($/;"	f
merge_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^pub fn merge_bytes<'a>($/;"	f
merge_solutions	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn merge_solutions<'ancestor, 'ours, 'theirs, T: ?Sized + SliceLike>($/;"	f
message_on_stack	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn message_on_stack(msg: T) -> Packet<T> {$/;"	f
metadata	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn metadata(&mut self, metadata: Metadata<'a>) -> &mut RecordBuilder<'a> {$/;"	f
metadata	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn metadata(&self) -> &Metadata<'a> {$/;"	f
metadata	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn metadata(&self) -> Result<fs::Metadata> {$/;"	f
metadata_internal	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    fn metadata_internal(&self) -> Result<fs::Metadata> {$/;"	f
metavar	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn metavar<'x>(&'x mut self, name: &str)$/;"	f
min_depth	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn min_depth(mut self, depth: usize) -> Self {$/;"	f
min_depth_1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_depth_1() {$/;"	f
min_depth_2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_depth_2() {$/;"	f
min_max_depth_diff_0	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_max_depth_diff_0() {$/;"	f
min_max_depth_diff_1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_max_depth_diff_1() {$/;"	f
min_max_depth_diff_nada	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn min_max_depth_diff_nada() {$/;"	f
mkdirp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn mkdirp<P: AsRef<Path>>(&self, path: P) {$/;"	f
modified	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn modified(&self) -> Option<&T> {$/;"	f
module_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn module_path(&mut self, path: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	f
module_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn module_path(&self) -> Option<&'a str> {$/;"	f
module_path_static	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn module_path_static(&mut self, path: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	f
module_path_static	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn module_path_static(&self) -> Option<&'static str> {$/;"	f
msg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^    pub fn msg(msg: &'static str) -> Self {$/;"	f
mut	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^static mut LOGGER: &dyn Log = &NopLogger;$/;"	c
my_quote	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^macro_rules! my_quote {$/;"	d
myers_diffy_vs_git	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn myers_diffy_vs_git() {$/;"	f
myers_diffy_vs_git	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/tests.rs	/^fn myers_diffy_vs_git() {$/;"	f
needs_arg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn needs_arg(&self) -> bool {$/;"	f
needs_to_be_escaped	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn needs_to_be_escaped(&self) -> bool {$/;"	f
needs_to_be_escaped_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn needs_to_be_escaped_bytes(&self) -> bool {$/;"	f
nested	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn nested() {$/;"	f
nested_small_max_open	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn nested_small_max_open() {$/;"	f
never	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub fn never<T>() -> Receiver<T> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/help.rs	/^    fn new(data: &'a str) -> WordsIter<'a> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn new() -> ArgumentParser<'parser> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    fn new() -> Context {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^pub fn new<C>(chan: C) -> (Sender<C>, Receiver<C>) {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub fn new(dur: Duration) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn new() -> Block<T> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub fn new(dur: Duration) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn new() -> Select<'a> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^    pub fn new(value: T) -> Spinlock<T> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn new(field: &'a syn::Field, idx: usize, named: bool) -> FieldExt<'a> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    fn new(old: ops::Range<usize>, new: ops::Range<usize>) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^    fn new(max_d: usize) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^    fn new(input: &'a T) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^    fn new<E: Into<Cow<'static, str>>>(e: E) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn new(inner: &'a T, bounds: impl RangeBounds) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    pub fn new(text: &'a T) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    pub fn new(gitignore_path: &'b Path) -> Result<File<'b>, error::Error> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    pub fn new(raw_pattern: &str, root: &'c Path) -> Result<Pattern<'c>, error::Error> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/aio/soap.rs	/^    pub fn new(action: &str) -> Action {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn new() -> MetadataBuilder<'a> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn new() -> RecordBuilder<'a> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn new(kind: ErrorKind) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn new(kind: EventKind) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    pub fn new(inotify: Inotify, event_fn: Box<dyn EventFn>) -> Result<Self> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn new(h: &[u32; STATE_LEN]) -> Engine256 {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn new(h: &[u64; STATE_LEN]) -> Engine512 {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn new(dent: &DirEntry) -> io::Result<Ancestor> {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn new<P: AsRef<Path>>(root: P) -> Self {$/;"	f
new	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn new() -> Result<TempDir> {$/;"	f
new_for_enum	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^fn new_for_enum(ast: &syn::DeriveInput, data: &syn::DataEnum) -> proc_macro2::TokenStream {$/;"	f
new_for_struct	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^fn new_for_struct($/;"	f
new_immediate	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn new_immediate<F: EventFn>(event_fn: F) -> Result<FsEventWatcher> {$/;"	f
new_immediate	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn new_immediate<F: EventFn>(event_fn: F) -> Result<INotifyWatcher> {$/;"	f
new_immediate	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^    fn new_immediate<F>(event_fn: F) -> Result<Self>$/;"	f
new_immediate	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/null.rs	/^    fn new_immediate<F: EventFn>(_event_fn: F) -> Result<NullWatcher> {$/;"	f
new_immediate	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    fn new_immediate<F: EventFn>(event_fn: F) -> Result<PollWatcher> {$/;"	f
new_immediate	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn new_immediate<F: EventFn>(event_fn: F) -> Result<ReadDirectoryChangesWatcher> {$/;"	f
new_impl	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^fn new_impl($/;"	f
new_range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn new_range(&self) -> HunkRange {$/;"	f
next	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/help.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	f
next	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^    fn next(&mut self) -> Result<&'a T> {$/;"	f
next	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn next(&mut self) -> Option<Result<DirEntry>> {$/;"	f
nibble_to_hexchar	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^pub fn nibble_to_hexchar(b: &u8) -> Result<char>  {$/;"	f
no_newline_at_eof	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn no_newline_at_eof() {$/;"	f
none	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn none(&mut self) -> Result<(), Error> {$/;"	f
none	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn none(&mut self) -> Result<(), Error> {$/;"	f
none	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn none(&mut self) -> Result<(), Error>;$/;"	f
none	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn none(&mut self) -> Result<(), Error> {$/;"	f
none	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn none(&mut self) -> Result<(), Error> {$/;"	f
notify	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn notify(&mut self) {$/;"	f
notify	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn notify(&self) {$/;"	f
offset	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn offset(&self) -> usize {$/;"	f
ok_or	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^fn ok_or<T, E>(t: Option<T>, e: E) -> Result<T, E> {$/;"	f
old_range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn old_range(&self) -> HunkRange {$/;"	f
one_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn one_dir() {$/;"	f
one_dir_one_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn one_dir_one_file() {$/;"	f
one_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn one_file() {$/;"	f
opt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_optional.rs	/^fn opt(args: &[&str]) -> Option<isize> {$/;"	f
optstr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_optional.rs	/^fn optstr(args: &[&str]) -> Option<String> {$/;"	f
or	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn or(a: [u32; 4], b: [u32; 4]) -> [u32; 4] {$/;"	f
original	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn original(&self) -> Option<&T> {$/;"	f
output_result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn output_result<'a, T: ?Sized>($/;"	f
output_result_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn output_result_bytes<'a, T: ?Sized>($/;"	f
parse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse(parser: &ArgumentParser, args: &Vec<String>, stderr: &mut Write)$/;"	f
parse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn parse(&self, args: Vec<String>,$/;"	f
parse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^    pub fn parse(attrs: &[syn::Attribute]) -> Option<FieldAttr> {$/;"	f
parse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^pub fn parse<'a>(input: &'a str) -> Result<Patch<'a, str>> {$/;"	f
parse	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn parse<T: std::str::FromStr>(&self) -> Option<T> {$/;"	f
parse_action	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn parse_action(action: &Element) -> Option<(String, Vec<String>)> {$/;"	f
parse_action_list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn parse_action_list(action_list: &Element) -> Option<HashMap<String, Vec<String>>> {$/;"	f
parse_add_any_port_mapping_response	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_add_any_port_mapping_response(result: RequestResult) -> Result<u16, AddAnyPortError> {$/;"	f
parse_arg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^    fn parse_arg(&self, arg: &str) -> ParseResult;$/;"	f
parse_arg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^    fn parse_arg(&self, arg: &str) -> ParseResult {$/;"	f
parse_arg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^    fn parse_arg(&self, arg: &str) -> ParseResult {$/;"	f
parse_args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^    fn parse_args(&self, args: &[&str]) -> ParseResult;$/;"	f
parse_args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/custom.rs	/^    fn parse_args(&self, args: &[&str]) -> ParseResult {$/;"	f
parse_args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^    fn parse_args(&self, args: &[&str]) -> ParseResult {$/;"	f
parse_args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn parse_args(&self) -> Result<(), i32> {$/;"	f
parse_args_or_exit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn parse_args_or_exit(&self) {$/;"	f
parse_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn parse_argument(action: &Element) -> Option<String> {$/;"	f
parse_argument_list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn parse_argument_list(argument_list: &Element) -> Option<Vec<String>> {$/;"	f
parse_arguments	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse_arguments(&mut self) -> ParseResult {$/;"	f
parse_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^pub fn parse_bytes<'a>(input: &'a [u8]) -> Result<Patch<'a, [u8]>> {$/;"	f
parse_control_urls	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_control_urls<R>(resp: R) -> Result<(String, String), SearchError>$/;"	f
parse_delete_port_mapping_response	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_delete_port_mapping_response(result: RequestResult) -> Result<(), RemovePortError> {$/;"	f
parse_device	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn parse_device(device: &Element) -> Option<(String, String)> {$/;"	f
parse_device_list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn parse_device_list(device_list: &Element) -> Option<(String, String)> {$/;"	f
parse_enum	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_enum.rs	/^fn parse_enum(args: &[&str]) -> Greeting {$/;"	f
parse_env_vars	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse_env_vars(&mut self) -> ParseResult {$/;"	f
parse_filename	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn parse_filename<'a, T: Text + ToOwned + ?Sized>($/;"	f
parse_flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/action.rs	/^    fn parse_flag(&self) -> ParseResult;$/;"	f
parse_flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/generic.rs	/^    fn parse_flag(&self) -> ParseResult {$/;"	f
parse_flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/help.rs	/^    fn parse_flag(&self) -> ParseResult {$/;"	f
parse_flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/num.rs	/^    fn parse_flag(&self) -> ParseResult {$/;"	f
parse_flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/print.rs	/^    fn parse_flag(&self) -> ParseResult {$/;"	f
parse_get_external_ip_response	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_get_external_ip_response(result: RequestResult) -> Result<Ipv4Addr, GetExternalIpError> {$/;"	f
parse_get_generic_port_mapping_entry	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_get_generic_port_mapping_entry($/;"	f
parse_list_vars	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse_list_vars(&mut self) -> ParseResult {$/;"	f
parse_long_option	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse_long_option(&mut self, arg: &'a str) -> ParseResult {$/;"	f
parse_option	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse_option(&mut self, opt: Rc<GenericOption<'b>>,$/;"	f
parse_options	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse_options(&mut self) -> ParseResult {$/;"	f
parse_pos	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn parse_pos(args: &[&str]) -> isize {$/;"	f
parse_pos_opt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn parse_pos_opt(args: &[&str]) -> (isize, isize) {$/;"	f
parse_pos_req	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn parse_pos_req(args: &[&str]) -> (isize, isize) {$/;"	f
parse_response	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_response(text: String, ok: &str) -> RequestResult {$/;"	f
parse_schemas	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_schemas<R>(resp: R) -> Result<HashMap<String, Vec<String>>, SearchError>$/;"	f
parse_search_result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^pub fn parse_search_result(text: &str) -> Result<(SocketAddrV4, String), SearchError> {$/;"	f
parse_service	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn parse_service(service: &Element) -> Option<(String, String)> {$/;"	f
parse_short_options	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn parse_short_options<'x>(&'x mut self, arg: &'a str) -> ParseResult {$/;"	f
parse_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_path.rs	/^fn parse_str(args: &[&str]) -> PathBuf {$/;"	f
parse_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_str.rs	/^fn parse_str(args: &[&str]) -> String {$/;"	f
parse_two	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn parse_two(args: &[&str]) -> (isize, isize) {$/;"	f
partial_cmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn partial_cmp(&self, other: &Key<'ko>) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn partial_cmp(&self, other: &Level) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn partial_cmp(&self, other: &LevelFilter) -> Option<cmp::Ordering> {$/;"	f
patch_header	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn patch_header<'a, T: Text + ToOwned + ?Sized>($/;"	f
path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    pub fn path(&self) -> Option<&Path> {$/;"	f
path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn path(&self) -> &Path {$/;"	f
path_is_symlink	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/dent.rs	/^    pub fn path_is_symlink(&self) -> bool {$/;"	f
path_not_found	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn path_not_found() -> Self {$/;"	f
path_to_string	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^fn path_to_string(path: &syn::Path) -> String {$/;"	f
paths	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn paths(&self) -> Vec<PathBuf> {$/;"	f
patterns	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn patterns(path: &'b Path, root: &'b Path) -> Result<Vec<pattern::Pattern<'b>>, error::Error> {$/;"	f
peek	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^    fn peek(&mut self) -> Option<&&'a T> {$/;"	f
perform_request	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    fn perform_request(&self, header: &str, body: &str, ok: &str) -> RequestResult {$/;"	f
pop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn pop(&mut self) {$/;"	f
pos_collect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn pos_collect(args: &[&str]) -> Vec<isize> {$/;"	f
pos_dash	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn pos_dash(args: &[&str], dash: bool) -> Vec<String> {$/;"	f
pos_list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn pos_list(args: &[&str]) -> (isize, Vec<isize>) {$/;"	f
pos_stop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn pos_stop(args: &[&str]) -> (isize, Vec<String>) {$/;"	f
post_image	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^fn post_image<'a, 'b, T: ?Sized>(lines: &'b [Line<'a, T>]) -> impl Iterator<Item = &'a T> + 'b {$/;"	f
postpone_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn postpone_argument(&mut self, arg: &'a str) {$/;"	f
pre_image	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^fn pre_image<'a, 'b, T: ?Sized>(lines: &'b [Line<'a, T>]) -> impl Iterator<Item = &'a T> + 'b {$/;"	f
pre_image_line_count	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/apply.rs	/^fn pre_image_line_count<T: ?Sized>(lines: &[Line<'_, T>]) -> usize {$/;"	f
primitive_cast	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^        fn primitive_cast() {$/;"	f
primitive_cast	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    fn primitive_cast() {$/;"	f
print_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn print_argument(&mut self, arg: &GenericArgument<'b>)$/;"	f
print_help	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn print_help(&self, name: &str, writer: &mut Write) -> IoResult<()> {$/;"	f
print_help	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn print_help(parser: &ArgumentParser, name: &str, writer: &mut Write)$/;"	f
print_option	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn print_option(&mut self, opt: &GenericOption<'b>) -> IoResult<()> {$/;"	f
print_usage	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn print_usage(&self, name: &str, writer: &mut Write) -> IoResult<()>$/;"	f
print_usage	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn print_usage(parser: &ArgumentParser, name: &str, writer: &mut Write)$/;"	f
push	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn push(&mut self, dent: &DirEntry) -> Result<()> {$/;"	f
push_const	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_const.rs	/^fn push_const(args: &[&str]) -> Vec<u32> {$/;"	f
random_port	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/mod.rs	/^pub fn random_port() -> u16 {$/;"	f
range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^        macro_rules! range {$/;"	d
range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn range<'a>(doc: &'a str, offset: &mut usize, text: &str) -> Range<'a, str> {$/;"	f
range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn range(&self) -> ops::Range<usize> {$/;"	f
range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn range<T: Text + ?Sized>(s: &T) -> Result<HunkRange> {$/;"	f
range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn range(&self) -> ops::Range<usize> {$/;"	f
read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub unsafe fn read<T>(r: &Receiver<T>, token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<Instant, ()> {$/;"	f
read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub unsafe fn read(&self, _token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<Instant, ()> {$/;"	f
read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<T, ()> {$/;"	f
ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn ready(&mut self) -> usize {$/;"	f
ready_timeout	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn ready_timeout(&mut self, timeout: Duration) -> Result<usize, ReadyTimeoutError> {$/;"	f
receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn receiver(&self) -> Receiver<T> {$/;"	f
receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn receiver(&self) -> Receiver<T> {$/;"	f
receiver	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn receiver(&self) -> Receiver<T> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn recv(&self) -> Result<T, RecvError> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<Instant, RecvTimeoutError> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<Instant, RecvTimeoutError> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn recv<T>(&mut self, r: &'a Receiver<T>) -> usize {$/;"	f
recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn recv<T>(mut self, r: &Receiver<T>) -> Result<T, RecvError> {$/;"	f
recv_command	/home/mimerme/takeetoes/src/net.rs	/^fn recv_command(connection : &mut TcpStream, block : bool)->Result<(u8, u64, Vec<u8>)>{$/;"	f
recv_timeout	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn recv_timeout(&self, timeout: Duration) -> Result<T, RecvTimeoutError> {$/;"	f
refer	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn refer<'x, T>(&'x mut self, val: &'parser mut T)$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool;$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn register(&mut self, oper: Operation, cx: &Context) {$/;"	f
register	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn register(&self, oper: Operation, cx: &Context) {$/;"	f
register_with_packet	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn register_with_packet(&mut self, oper: Operation, packet: usize, cx: &Context) {$/;"	f
regression_skip_current_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn regression_skip_current_dir() {$/;"	f
release	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/counter.rs	/^    pub unsafe fn release<F: FnOnce(&C) -> bool>(&self, disconnect: F) {$/;"	f
remove	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn remove(&mut self, index: usize) {$/;"	f
remove_all_watches	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn remove_all_watches(&mut self) -> Result<()> {$/;"	f
remove_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn remove_path<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
remove_port	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    pub fn remove_port(&self, protocol: PortMappingProtocol, external_port: u16) -> Result<(), RemovePortError> {$/;"	f
remove_watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn remove_watch(&mut self, path: PathBuf, remove_recursive: bool) -> Result<()> {$/;"	f
remove_watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn remove_watch(&mut self, path: PathBuf) {$/;"	f
remove_watch_by_event	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^fn remove_watch_by_event($/;"	f
required	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn required<'x>(&'x mut self)$/;"	f
required	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_env.rs	/^fn required(args: &[&str]) -> (isize, isize) {$/;"	f
reset	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    fn reset(&self) {$/;"	f
reset	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn reset(&mut self) {$/;"	f
reset	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn reset(&mut self, h: &[u32; STATE_LEN]) {$/;"	f
reset	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn reset(&mut self) {$/;"	f
reset	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn reset(&mut self, h: &[u64; STATE_LEN]) {$/;"	f
result	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/tests.rs	/^        macro_rules! result {$/;"	d
result_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/tests.rs	/^        macro_rules! result_bytes {$/;"	d
retry_add_random_port_mapping	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/gateway.rs	/^    fn retry_add_random_port_mapping($/;"	f
rounds4	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^macro_rules! rounds4 {$/;"	d
rounds4	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/x86.rs	/^macro_rules! rounds4 {$/;"	d
rounds4	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    macro_rules! rounds4 {$/;"	d
run	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn run(&mut self) -> Result<()> {$/;"	f
run	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    pub fn run(self) {$/;"	f
run	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    fn run(&mut self) {$/;"	f
run	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn run(mut self) {$/;"	f
run_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^fn run_ready($/;"	f
run_recursive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn run_recursive<I>(&self, it: I) -> RecursiveResults$/;"	f
run_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^fn run_select($/;"	f
same_channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn same_channel(&self, other: &Receiver<T>) -> bool {$/;"	f
same_channel	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn same_channel(&self, other: &Sender<T>) -> bool {$/;"	f
same_diffs	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn same_diffs(expected: &[Diff<str>], actual: &[DiffRange<str>]) -> bool {$/;"	f
same_file_system	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn same_file_system(mut self, yes: bool) -> Self {$/;"	f
same_file_system	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn same_file_system() {$/;"	f
same_merge	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/tests.rs	/^fn same_merge(expected: Result<&str, &str>, actual: &Result<String, String>) -> bool {$/;"	f
same_merge_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/tests.rs	/^fn same_merge_bytes(expected: Result<&[u8], &[u8]>, actual: &Result<Vec<u8>, Vec<u8>>) -> bool {$/;"	f
sample	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn sample() {$/;"	f
schedule	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn schedule(v0: [u32; 4], v1: [u32; 4], v2: [u32; 4], v3: [u32; 4]) -> [u32; 4] {$/;"	f
schedule	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/x86.rs	/^unsafe fn schedule(v0: __m128i, v1: __m128i, v2: __m128i, v3: __m128i) -> __m128i {$/;"	f
schedule	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    macro_rules! schedule {$/;"	d
schedule_rounds4	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^macro_rules! schedule_rounds4 {$/;"	d
schedule_rounds4	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/x86.rs	/^macro_rules! schedule_rounds4 {$/;"	d
search_gateway	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/search.rs	/^pub fn search_gateway(options: SearchOptions) -> Result<Gateway, SearchError> {$/;"	f
select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn select(&mut self) -> SelectedOperation<'a> {$/;"	f
select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub fn select<'a>($/;"	f
select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select_macro.rs	/^macro_rules! select {$/;"	d
select_timeout	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn select_timeout($/;"	f
select_timeout	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub fn select_timeout<'a>($/;"	f
selected	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn selected(&self) -> Selected {$/;"	f
send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn send(&self, msg: T, deadline: Option<Instant>) -> Result<(), SendTimeoutError<T>> {$/;"	f
send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn send(&self, msg: T, _deadline: Option<Instant>) -> Result<(), SendTimeoutError<T>> {$/;"	f
send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn send(&self, msg: T, deadline: Option<Instant>) -> Result<(), SendTimeoutError<T>> {$/;"	f
send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn send<T>(&mut self, s: &'a Sender<T>) -> usize {$/;"	f
send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn send<T>(mut self, s: &Sender<T>, msg: T) -> Result<(), SendError<T>> {$/;"	f
send_action_require_ack	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn send_action_require_ack(&mut self, action: Action, pb: &PathBuf) -> Result<()> {$/;"	f
send_command	/home/mimerme/takeetoes/src/net.rs	/^fn send_command(opcode : u8, data_len : u64, data : &Vec<u8>, connection : &mut TcpStream)->Result<()>{$/;"	f
send_pending_rename_event	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^fn send_pending_rename_event(rename_event: &mut Option<Event>, event_fn: &dyn EventFn) {$/;"	f
send_sync	/home/mimerme/takeetoes/src/net.rs	/^fn send_sync(mut connection : &mut TcpStream, old_contents : &str, new_contents : &str, file_bufs : &mut HashMap<String, (String, String)>, net_path : &str, $/;"	f
send_sync_traits	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn send_sync_traits() {$/;"	f
send_timeout	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn send_timeout(&self, msg: T, timeout: Duration) -> Result<(), SendTimeoutError<T>> {$/;"	f
sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn sender(&self) -> Sender<T> {$/;"	f
sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn sender(&self) -> Sender<T> {$/;"	f
sender	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn sender(&self) -> Sender<T> {$/;"	f
serialize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set_bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn set_bool(args: &[&str]) -> bool {$/;"	f
set_boxed_logger	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn set_boxed_logger(logger: Box<dyn Log>) -> Result<(), SetLoggerError> {$/;"	f
set_compact	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    fn set_compact(&mut self, compact: bool) -> &mut Self {$/;"	f
set_conflict_marker_length	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    pub fn set_conflict_marker_length(&mut self, conflict_marker_length: usize) -> &mut Self {$/;"	f
set_conflict_style	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^    pub fn set_conflict_style(&mut self, style: ConflictStyle) -> &mut Self {$/;"	f
set_context_len	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^    pub fn set_context_len(&mut self, context_len: usize) -> &mut Self {$/;"	f
set_description	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn set_description(&mut self, descr: &'parser str) {$/;"	f
set_flag	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn set_flag(mut self, flag: Flag) -> Self {$/;"	f
set_i16	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn set_i16(args: &[&str]) -> i16 {$/;"	f
set_info	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn set_info(mut self, info: &str) -> Self {$/;"	f
set_int	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn set_int(args: &[&str]) -> isize {$/;"	f
set_kind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn set_kind(mut self, kind: EventKind) -> Self {$/;"	f
set_logger	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn set_logger(logger: &'static dyn Log) -> Result<(), SetLoggerError> {$/;"	f
set_logger_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^fn set_logger_inner<F>(make_logger: F) -> Result<(), SetLoggerError>$/;"	f
set_logger_racy	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub unsafe fn set_logger_racy(logger: &'static dyn Log) -> Result<(), SetLoggerError> {$/;"	f
set_max_level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^pub fn set_max_level(level: LevelFilter) {$/;"	f
set_or_merge_range	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn set_or_merge_range<'a, T: ?Sized>(range1: &mut Option<Range<'a, T>>, range2: Range<'a, T>) {$/;"	f
set_paths	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn set_paths(mut self, paths: Vec<PathBuf>) -> Self {$/;"	f
set_tracker	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn set_tracker(mut self, tracker: usize) -> Self {$/;"	f
sha256_digest_block_u32	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn sha256_digest_block_u32(state: &mut [u32; 8], block: &[u32; 16]) {$/;"	f
sha256_digest_round_x2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn sha256_digest_round_x2(cdgh: [u32; 4], abef: [u32; 4], wk: [u32; 4]) -> [u32; 4] {$/;"	f
sha256load	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn sha256load(v2: [u32; 4], v3: [u32; 4]) -> [u32; 4] {$/;"	f
sha256msg1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn sha256msg1(v0: [u32; 4], v1: [u32; 4]) -> [u32; 4] {$/;"	f
sha256msg2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn sha256msg2(v4: [u32; 4], v3: [u32; 4]) -> [u32; 4] {$/;"	f
sha256swap	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn sha256swap(v0: [u32; 4]) -> [u32; 4] {$/;"	f
sha2_supported	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/aarch64.rs	/^pub fn sha2_supported() -> bool {$/;"	f
sha512_digest_block_u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^pub fn sha512_digest_block_u64(state: &mut [u64; 8], block: &[u64; 16]) {$/;"	f
sha512_digest_round	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^pub fn sha512_digest_round($/;"	f
sha512_schedule_x2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^pub fn sha512_schedule_x2(v0: [u64; 2], v1: [u64; 2], v4to5: [u64; 2], v7: [u64; 2]) -> [u64; 2] {$/;"	f
sha512load	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^fn sha512load(v0: [u64; 2], v1: [u64; 2]) -> [u64; 2] {$/;"	f
shift_diff_down	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/cleanup.rs	/^fn shift_diff_down<'a, 'b, T: ?Sized + SliceLike>($/;"	f
shift_diff_up	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/cleanup.rs	/^fn shift_diff_up<'a, 'b, T: ?Sized + SliceLike>($/;"	f
shift_down	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn shift_down(&mut self, adjust: usize) {$/;"	f
shift_up	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn shift_up(&mut self, adjust: usize) {$/;"	f
shl	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn shl(v: [u32; 4], o: u32) -> [u32; 4] {$/;"	f
shr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn shr(v: [u32; 4], o: u32) -> [u32; 4] {$/;"	f
shrink_back	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn shrink_back(&mut self, adjust: usize) {$/;"	f
shrink_front	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/mod.rs	/^fn shrink_front<T: ?Sized + SliceLike>(maybe_range: &mut Option<DiffRange<T>>, len: usize) {$/;"	f
shrink_front	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn shrink_front(&mut self, adjust: usize) {$/;"	f
shuffle	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^pub fn shuffle<T>(v: &mut [T]) {$/;"	f
siblings	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn siblings() {$/;"	f
sigma0	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    fn sigma0(x: u64) -> u64 {$/;"	f
sigma0x4	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^    fn sigma0x4(x: [u32; 4]) -> [u32; 4] {$/;"	f
sigma1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^    macro_rules! sigma1 {$/;"	d
sigma1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512/soft.rs	/^    fn sigma1(x: u64) -> u64 {$/;"	f
silence_double_dash	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn silence_double_dash(&mut self, silence: bool) {$/;"	f
skip_current_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn skip_current_dir(&mut self) {$/;"	f
skip_current_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn skip_current_dir() {$/;"	f
skip_header_preamble	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn skip_header_preamble<'a, T: Text + ?Sized>(parser: &mut Parser<'a, T>) -> Result<()> {$/;"	f
skippable	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    fn skippable(&self) -> bool {$/;"	f
sleep_until	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/utils.rs	/^pub fn sleep_until(deadline: Option<Instant>) {$/;"	f
slice	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn slice(&self, bounds: impl RangeBounds) -> Self {$/;"	f
sort	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sort() {$/;"	f
sort_by	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/lib.rs	/^    pub fn sort_by<F>(mut self, cmp: F) -> Self$/;"	f
sort_max_open	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sort_max_open() {$/;"	f
sorted_ents	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn sorted_ents(&self) -> Vec<DirEntry> {$/;"	f
sorted_paths	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn sorted_paths(&self) -> Vec<PathBuf> {$/;"	f
source	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/errors.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	f
source	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn source(&self) -> Option<&String> {$/;"	f
source	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
source_is_object_safe	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn source_is_object_safe() {$/;"	f
split_at	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn split_at(&self, mid: usize) -> (Self, Self) {$/;"	f
split_at	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn split_at(&self, mid: usize) -> (&Self, &Self) {$/;"	f
split_at	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn split_at(&self, mid: usize) -> (&Self, &Self);$/;"	f
split_at_exclusive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn split_at_exclusive(&self, needle: &str) -> Option<(&Self, &Self)> {$/;"	f
split_at_exclusive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn split_at_exclusive(&self, needle: &str) -> Option<(&Self, &Self)>;$/;"	f
start	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn start(&self) -> usize {$/;"	f
start	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn start($/;"	f
start	/home/mimerme/takeetoes/src/client.rs	/^    pub fn start<P : 'static + NodeProtocol>(&mut self, protocol: fn(Arc<RwLock<Vec<Arc<RwLock<TcpStream>>>>>) -> P) -> Result<()>$/;"	f
start	/home/mimerme/takeetoes/src/takeetoe_old.rs	/^    pub fn start<F>(&self, mut handler : F, connect_peer : &str) -> Result<()>$/;"	f
start_file_io	/home/mimerme/takeetoes/src/threads.rs	/^fn start_file_io(changes_out : Sender<(u8, u64, Patch)>, proj_dir : String, net_changes : Receiver<([u8;64], Patch)>, files : &mut HashMap<String, (String, String)>, $/;"	f
start_file_thread	/home/mimerme/takeetoes/src/threads.rs	/^fn start_file_thread(changes_out : Sender<(u8, u64, Patch)>, proj_dir : String, net_changes : Receiver<(u8, u64, Vec<u8>)>, files : &mut Arc<RwLock<HashMap<String, (String, String)>>>, version_history : &mut Arc<RwLock<HashMap<String, (String, String)>>>) {$/;"	f
start_network_thread	/home/mimerme/takeetoes/src/threads.rs	/^fn start_network_thread() {$/;"	f
start_read	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^fn start_read(rd: &ReadData, event_fn: Arc<Mutex<dyn EventFn>>, handle: HANDLE) {$/;"	f
start_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn start_recv(&self, token: &mut Token) -> bool {$/;"	f
start_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn start_recv(&self, token: &mut Token) -> bool {$/;"	f
start_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn start_recv(&self, token: &mut Token) -> bool {$/;"	f
start_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn start_send(&self, token: &mut Token) -> bool {$/;"	f
start_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn start_send(&self, token: &mut Token) -> bool {$/;"	f
start_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn start_send(&self, token: &mut Token) -> bool {$/;"	f
starts_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn starts_with(&self, prefix: &Self) -> bool {$/;"	f
starts_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn starts_with(&self, prefix: &Self) -> bool;$/;"	f
starts_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn starts_with(&self, prefix: &str) -> bool {$/;"	f
starts_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn starts_with(&self, prefix: Range<'_, T>) -> bool {$/;"	f
starts_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn starts_with(&self, prefix: &str) -> bool {$/;"	f
starts_with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn starts_with(&self, prefix: &str) -> bool;$/;"	f
std_support	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/error.rs	/^mod std_support {$/;"	m
std_support	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^mod std_support {$/;"	m
std_support	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^mod std_support {$/;"	m
std_support	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^mod std_support {$/;"	m
std_support	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^mod std_support {$/;"	m
stop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn stop(&mut self) {$/;"	f
stop_on_first_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    pub fn stop_on_first_argument(&mut self, want_stop: bool) {$/;"	f
stop_watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^fn stop_watch(ws: &WatchState, meta_tx: &Sender<MetaEvent>) {$/;"	f
store_bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn store_bool(args: &[&str]) -> bool {$/;"	f
store_false	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn store_false(args: &[&str]) -> bool {$/;"	f
store_packet	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn store_packet(&self, packet: usize) {$/;"	f
store_true	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn store_true(args: &[&str]) -> bool {$/;"	f
str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn str(&mut self, _: &str) -> Result<(), Error> {$/;"	f
str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	f
str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	f
str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn str(&mut self, v: &str) -> Result<(), Error>;$/;"	f
str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	f
str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        fn str(&mut self, s: &str) -> sval::stream::Result {$/;"	f
str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn str(&mut self, v: &str) -> Result<(), Error> {$/;"	f
stream	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn stream(&self, stream: &mut sval::value::Stream) -> sval::value::Result {$/;"	f
stream	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    fn stream(&self, s: &mut sval::value::Stream) -> sval::value::Result {$/;"	f
string_repr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^    fn string_repr() -> String { String::from("cbbbc6e19be63efcdd78327d2df850d92375af6a03934f35e47bd02d1b496c0c") }$/;"	f
strip_newline	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn strip_newline<T: Text + ?Sized>(s: &T) -> Result<&T> {$/;"	f
strip_prefix	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn strip_prefix(&self, prefix: &str) -> Option<&Self> {$/;"	f
strip_prefix	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn strip_prefix(&self, prefix: &str) -> Option<&Self>;$/;"	f
strip_suffix	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn strip_suffix(&self, suffix: &str) -> Option<&Self> {$/;"	f
strip_suffix	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/utils.rs	/^    fn strip_suffix(&self, suffix: &str) -> Option<&Self>;$/;"	f
sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn sval(&mut self, v: &dyn super::sval::Value) -> Result<(), Error> {$/;"	f
sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn sval(&mut self, v: &dyn super::sval::Value) -> Result<(), Error> {$/;"	f
sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn sval(&mut self, v: &dyn sval::Value) -> Result<(), Error>;$/;"	f
sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn sval(&mut self, v: &dyn sval::Value) -> Result<(), Error> {$/;"	f
sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn sval(&mut self, _: &dyn internal::sval::Value) -> Result<(), Error> {$/;"	f
sval_cast	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    fn sval_cast() {$/;"	f
sval_debug	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    fn sval_debug() {$/;"	f
sym_dir_follow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_dir_follow() {$/;"	f
sym_dir_nofollow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_dir_nofollow() {$/;"	f
sym_dir_self_loop_io_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_dir_self_loop_io_error() {$/;"	f
sym_file_follow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_file_follow() {$/;"	f
sym_file_nofollow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_file_nofollow() {$/;"	f
sym_file_self_loop_io_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_file_self_loop_io_error() {$/;"	f
sym_loop_detect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_loop_detect() {$/;"	f
sym_noloop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_noloop() {$/;"	f
sym_root_dir_follow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_dir_follow() {$/;"	f
sym_root_dir_nofollow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_dir_nofollow() {$/;"	f
sym_root_file_follow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_file_follow() {$/;"	f
sym_root_file_nofollow	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_root_file_nofollow() {$/;"	f
sym_self_loop_no_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/recursive.rs	/^fn sym_self_loop_no_error() {$/;"	f
symlink_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn symlink_dir<P1: AsRef<Path>, P2: AsRef<Path>>($/;"	f
symlink_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn symlink_file<P1: AsRef<Path>, P2: AsRef<Path>>($/;"	f
target	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut MetadataBuilder<'a> {$/;"	f
target	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut RecordBuilder<'a> {$/;"	f
target	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn target(&self) -> &'a str {$/;"	f
test_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_help.rs	/^fn test_argument() {$/;"	f
test_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_argument() {$/;"	f
test_argument	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_usage.rs	/^fn test_argument() {$/;"	f
test_arguments	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_help.rs	/^fn test_arguments() {$/;"	f
test_arguments	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_usage.rs	/^fn test_arguments() {$/;"	f
test_bad_bools1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn test_bad_bools1() {$/;"	f
test_bad_bools2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn test_bad_bools2() {$/;"	f
test_bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn test_bool() {$/;"	f
test_collect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn test_collect() {$/;"	f
test_common_overlap	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn test_common_overlap() {$/;"	f
test_common_prefix	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn test_common_prefix() {$/;"	f
test_common_suffix	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn test_common_suffix() {$/;"	f
test_compact	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn test_compact() {$/;"	f
test_cross_cmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_cross_cmp() {$/;"	f
test_cross_eq	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_cross_eq() {$/;"	f
test_decr_int	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn test_decr_int() {$/;"	f
test_diff_slice	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn test_diff_slice() {$/;"	f
test_diff_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn test_diff_str() {$/;"	f
test_double_star_matches_nested_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_double_star_matches_nested_dir() {$/;"	f
test_double_star_matches_nested_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_double_star_matches_nested_file() {$/;"	f
test_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_help.rs	/^fn test_empty() {$/;"	f
test_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_usage.rs	/^fn test_empty() {$/;"	f
test_err	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_path.rs	/^fn test_err() {$/;"	f
test_err	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_str.rs	/^fn test_err() {$/;"	f
test_error_trait	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_error_trait() {$/;"	f
test_escaped_filenames	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^    fn test_escaped_filenames() {$/;"	f
test_extra	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn test_extra() {$/;"	f
test_fail	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_float.rs	/^fn test_fail() {$/;"	f
test_find_middle_snake	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^    fn test_find_middle_snake() {$/;"	f
test_float	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_float.rs	/^fn test_float() {$/;"	f
test_from_sval	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    fn test_from_sval() {$/;"	f
test_fsevent_watcher_drop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^fn test_fsevent_watcher_drop() {$/;"	f
test_help	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_parser.rs	/^fn test_help() {$/;"	f
test_i16	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn test_i16() {$/;"	f
test_i16_big	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn test_i16_big() {$/;"	f
test_included_by_ignore_pattern	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn test_included_by_ignore_pattern() {$/;"	f
test_included_files	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn test_included_files() {$/;"	f
test_incr_decr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_float.rs	/^fn test_incr_decr() {$/;"	f
test_incr_decr	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn test_incr_decr() {$/;"	f
test_incr_int	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn test_incr_int() {$/;"	f
test_level_case_insensitive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_case_insensitive() {$/;"	f
test_level_de_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_de_bytes() {$/;"	f
test_level_de_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_de_error() {$/;"	f
test_level_filter_case_insensitive	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_filter_case_insensitive() {$/;"	f
test_level_filter_de_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_filter_de_bytes() {$/;"	f
test_level_filter_de_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_filter_de_error() {$/;"	f
test_level_filter_ser_de	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_filter_ser_de() {$/;"	f
test_level_from_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_level_from_str() {$/;"	f
test_level_ser_de	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^    fn test_level_ser_de() {$/;"	f
test_level_show	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_level_show() {$/;"	f
test_levelfilter_from_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_levelfilter_from_str() {$/;"	f
test_levelfilter_show	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_levelfilter_show() {$/;"	f
test_list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn test_list() {$/;"	f
test_matches_anchored_on_nested_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_anchored_on_nested_dir() {$/;"	f
test_matches_anchored_on_nested_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_anchored_on_nested_file() {$/;"	f
test_matches_directory_on_directory	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_directory_on_directory() {$/;"	f
test_matches_directory_on_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_directory_on_file() {$/;"	f
test_matches_negated	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_negated() {$/;"	f
test_matches_simple	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_simple() {$/;"	f
test_matches_unanchored_on_nested_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_unanchored_on_nested_dir() {$/;"	f
test_matches_unanchored_on_nested_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_unanchored_on_nested_file() {$/;"	f
test_matches_unanchored_on_wildcard	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_matches_unanchored_on_wildcard() {$/;"	f
test_merge	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/merge/tests.rs	/^fn test_merge() {$/;"	f
test_metadata_builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_metadata_builder() {$/;"	f
test_metadata_convenience_builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_metadata_convenience_builder() {$/;"	f
test_metavar	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_help.rs	/^fn test_metavar() {$/;"	f
test_missing_filename_header	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^    fn test_missing_filename_header() {$/;"	f
test_negate_double_star_matches_nested_dir	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_negate_double_star_matches_nested_dir() {$/;"	f
test_negate_double_star_matches_nested_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_negate_double_star_matches_nested_file() {$/;"	f
test_nested_files	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn test_nested_files() {$/;"	f
test_new_anchored_git_ignore_pattern	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_new_anchored_git_ignore_pattern() {$/;"	f
test_new_anchored_git_ignore_pattern_with_trailing_slash_on_root	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_new_anchored_git_ignore_pattern_with_trailing_slash_on_root() {$/;"	f
test_new_directory_git_ignore_pattern	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_new_directory_git_ignore_pattern() {$/;"	f
test_new_file_with_anchored	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn test_new_file_with_anchored() {$/;"	f
test_new_file_with_empty	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn test_new_file_with_empty() {$/;"	f
test_new_file_with_unanchored_wildcard	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn test_new_file_with_unanchored_wildcard() {$/;"	f
test_new_git_ignore_pattern	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_new_git_ignore_pattern() {$/;"	f
test_new_negated_git_ignore_pattern	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^    fn test_new_negated_git_ignore_pattern() {$/;"	f
test_no_arg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_parser.rs	/^fn test_no_arg() {$/;"	f
test_opt	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_optional.rs	/^fn test_opt() {$/;"	f
test_opt_no_arg	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_optional.rs	/^fn test_opt_no_arg() {$/;"	f
test_options	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_help.rs	/^fn test_options() {$/;"	f
test_options	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_usage.rs	/^fn test_options() {$/;"	f
test_owo	/home/mimerme/takeetoes/src/takeetoe.rs	/^fn test_owo(){$/;"	f
test_parse_device1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn test_parse_device1() {$/;"	f
test_parse_device2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn test_parse_device2() {$/;"	f
test_parse_device3	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn test_parse_device3() {$/;"	f
test_parse_enum	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_enum.rs	/^fn test_parse_enum() {$/;"	f
test_parse_error	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_enum.rs	/^fn test_parse_error() {$/;"	f
test_parse_search_result_case_insensitivity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn test_parse_search_result_case_insensitivity() {$/;"	f
test_parse_search_result_fail	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn test_parse_search_result_fail() {$/;"	f
test_parse_search_result_ok	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/igd-0.11.1/src/common/parsing.rs	/^fn test_parse_search_result_ok() {$/;"	f
test_path	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_path.rs	/^fn test_path() {$/;"	f
test_pos_collect	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn test_pos_collect() {$/;"	f
test_pos_dash	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_pos_dash() {$/;"	f
test_pos_extra	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_pos_extra() {$/;"	f
test_pos_list	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn test_pos_list() {$/;"	f
test_pos_no_req	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_pos_no_req() {$/;"	f
test_pos_opt_err	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_pos_opt_err() {$/;"	f
test_pos_stop	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_pos_stop() {$/;"	f
test_positional_optional	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_positional_optional() {$/;"	f
test_positional_required	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_positional_required() {$/;"	f
test_push	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_const.rs	/^fn test_push() {$/;"	f
test_record_builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_record_builder() {$/;"	f
test_record_complete_builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_record_complete_builder() {$/;"	f
test_record_convenience_builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_record_convenience_builder() {$/;"	f
test_record_key_values_builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_record_key_values_builder() {$/;"	f
test_record_key_values_get_coerce	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_record_key_values_get_coerce() {$/;"	f
test_req	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_env.rs	/^fn test_req() {$/;"	f
test_req_arguments	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_help.rs	/^fn test_req_arguments() {$/;"	f
test_required	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_env.rs	/^fn test_required() {$/;"	f
test_set_bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn test_set_bool() {$/;"	f
test_set_int	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn test_set_int() {$/;"	f
test_set_int_bad	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_int.rs	/^fn test_set_int_bad() {$/;"	f
test_store_false	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn test_store_false() {$/;"	f
test_store_true	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_bool.rs	/^fn test_store_true() {$/;"	f
test_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_optional.rs	/^fn test_str() {$/;"	f
test_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_str.rs	/^fn test_str() {$/;"	f
test_str_no_art	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_optional.rs	/^fn test_str_no_art() {$/;"	f
test_sval_structured	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^    fn test_sval_structured() {$/;"	f
test_test	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_test() {$/;"	f
test_to_level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_to_level() {$/;"	f
test_to_level_filter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn test_to_level_filter() {$/;"	f
test_to_snake_case	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^fn test_to_snake_case() {$/;"	f
test_to_value_display	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^    fn test_to_value_display() {$/;"	f
test_to_value_structured	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^    fn test_to_value_structured() {$/;"	f
test_two	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_two() {$/;"	f
test_two_fail_float	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_two_fail_float() {$/;"	f
test_two_fail_many	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_two_fail_many() {$/;"	f
test_two_fail_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn test_two_fail_value() {$/;"	f
test_unicode	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^fn test_unicode() {$/;"	f
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/myers.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/pattern.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/fill.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^mod tests {$/;"	m
tests	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^mod tests {$/;"	m
text1	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^        macro_rules! text1 {$/;"	d
text2	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/tests.rs	/^        macro_rules! text2 {$/;"	d
thread_id	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn thread_id(&self) -> ThreadId {$/;"	f
tick	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub fn tick(duration: Duration) -> Receiver<Instant> {$/;"	f
tmp	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn tmp() -> Dir {$/;"	f
to_ascii_uppercase	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    fn to_ascii_uppercase(c: u8) -> u8 {$/;"	f
to_bool	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_bool(&self) -> Option<bool> {$/;"	f
to_borrowed_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_borrowed_str(&self) -> Option<&str> {$/;"	f
to_builder	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn to_builder(&self) -> RecordBuilder {$/;"	f
to_byte	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^        fn to_byte(octet: Vec<char>) -> u8 {$/;"	f
to_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    pub fn to_bytes(&self) -> Vec<u8> {$/;"	f
to_char	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_char(&self) -> Option<char> {$/;"	f
to_f32	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_f32(&self) -> Option<f32> {$/;"	f
to_f64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_f64(&self) -> Option<f64> {$/;"	f
to_hunks	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/diff/mod.rs	/^fn to_hunks<'a, T: ?Sized>($/;"	f
to_i16	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_i16(&self) -> Option<i16> {$/;"	f
to_i32	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_i32(&self) -> Option<i32> {$/;"	f
to_i64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_i64(&self) -> Option<i64> {$/;"	f
to_i8	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_i8(&self) -> Option<i8> {$/;"	f
to_isize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_isize(&self) -> Option<isize> {$/;"	f
to_key	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^        fn to_key(&self) -> Key {$/;"	f
to_key	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	f
to_key	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/key.rs	/^    fn to_key(&self) -> Key;$/;"	f
to_level	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn to_level(&self) -> Option<Level> {$/;"	f
to_level_filter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^    pub fn to_level_filter(&self) -> LevelFilter {$/;"	f
to_snake_case	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/derive-new-0.5.8/src/lib.rs	/^fn to_snake_case(s: &str) -> String {$/;"	f
to_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    pub fn to_str(&self, text1: &'a str, text2: &'b str) -> DiffRange<'a, 'b, str> {$/;"	f
to_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^        pub fn to_str(&self) -> Option<Cow<str>> {$/;"	f
to_u16	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_u16(&self) -> Option<u16> {$/;"	f
to_u32	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_u32(&self) -> Option<u32> {$/;"	f
to_u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_u64(&self) -> Option<u64> {$/;"	f
to_u8	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_u8(&self) -> Option<u8> {$/;"	f
to_usize	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^    pub fn to_usize(&self) -> Option<usize> {$/;"	f
to_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^                fn to_value(&self) -> Value {$/;"	f
to_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^        fn to_value(&self) -> Value {$/;"	f
to_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/impls.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/mod.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/mod.rs	/^    fn to_value(&self) -> Value;$/;"	f
too_much_args	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn too_much_args() {$/;"	f
touch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn touch<P: AsRef<Path>>(&self, path: P) {$/;"	f
touch_all	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.3.1/src/tests/util.rs	/^    pub fn touch_all<P: AsRef<Path>>(&self, paths: &[P]) {$/;"	f
trace	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! trace {$/;"	d
tracker	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/event.rs	/^    pub fn tracker(&self) -> Option<usize> {$/;"	f
translate_flags	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^fn translate_flags(flags: fse::StreamFlags, precise: bool) -> Vec<Event> {$/;"	f
try_index	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn try_index(self, len: usize) -> Option<(usize, usize)> {$/;"	f
try_index	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/range.rs	/^    fn try_index(self, len: usize) -> Option<(usize, usize)>;$/;"	f
try_iter	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn try_iter(&self) -> TryIter<T> {$/;"	f
try_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn try_ready(&mut self) -> Result<usize, TryReadyError> {$/;"	f
try_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    pub fn try_recv(&self) -> Result<Instant, TryRecvError> {$/;"	f
try_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    pub fn try_recv(&self) -> Result<Instant, TryRecvError> {$/;"	f
try_recv	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn try_select(&self, select: Selected) -> Result<(), Selected> {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn try_select(&self, _token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn try_select(&self, token: &mut Token) -> bool;$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    pub fn try_select(&mut self) -> Result<SelectedOperation<'a>, TrySelectError> {$/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^pub fn try_select<'a>($/;"	f
try_select	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn try_select(&mut self) -> Option<Entry> {$/;"	f
try_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_send	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
type_ids	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^        macro_rules! type_ids {$/;"	d
u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/cast.rs	/^            fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	f
u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/fmt.rs	/^            fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	f
u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn u64(&mut self, v: u64) -> Result<(), Error>;$/;"	f
u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^            fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	f
u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/sval.rs	/^        fn u64(&mut self, v: u64) -> sval::stream::Result {$/;"	f
u64	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/test.rs	/^            fn u64(&mut self, v: u64) -> Result<(), Error> {$/;"	f
u8_to_hex_string	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-string-0.1.0/src/lib.rs	/^pub fn u8_to_hex_string(b: &u8) -> [char; 2] {$/;"	f
unbind	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select_macro.rs	/^                    unsafe fn unbind<'a, T>(x: &T) -> &'a T {$/;"	f
unbounded	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub fn unbounded<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
unescaped_filename	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn unescaped_filename<'a, T: Text + ToOwned + ?Sized>(filename: &'a T) -> Result<Cow<'a, [u8]>> {$/;"	f
unpark	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn unpark(&self) {$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn unregister(&self, oper: Operation);$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn unregister(&mut self, oper: Operation) -> Option<Entry> {$/;"	f
unregister	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn unregister(&self, oper: Operation) -> Option<Entry> {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn unwatch(&self, oper: Operation);$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn unwatch(&mut self, oper: Operation) {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()>;$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/null.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn unwatch_inner(&mut self, path: &Path) -> Result<()> {$/;"	f
unwatch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn unwatch_inner(&mut self, path: &Path) -> Result<()> {$/;"	f
unwatch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    fn unwatch_inner(&mut self, path: &Path) -> Result<()> {$/;"	f
unwatch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn unwatch_inner(&mut self, path: &Path) -> Result<()> {$/;"	f
update	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn update(&mut self, input: &[u8]) {$/;"	f
update	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256.rs	/^    fn update(&mut self, input: impl AsRef<[u8]>) {$/;"	f
update	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn update(&mut self, input: &[u8]) {$/;"	f
update	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha512.rs	/^    fn update(&mut self, input: impl AsRef<[u8]>) {$/;"	f
verify_file_hash	/home/mimerme/takeetoes/src/net.rs	/^fn verify_file_hash(proj_hash : &Vec<u8>, file_hash : &Vec<u8>, mut peer_stream : &mut TcpStream) -> bool{$/;"	f
verify_hunks_in_order	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/parse.rs	/^fn verify_hunks_in_order<T: ?Sized>(hunks: &[Hunk<'_, T>]) -> bool {$/;"	f
visit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^            fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error>;$/;"	f
visit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/internal/mod.rs	/^    fn visit(self, visitor: &mut dyn Visitor<'v>) -> Result<(), Error> {$/;"	f
visit	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/value/mod.rs	/^    fn visit<'a>(&'a self, visitor: &mut dyn Visitor<'a>) -> Result<(), Error> {$/;"	f
visit_bytes	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^            fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_enum	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^            fn visit_enum<A>(self, value: A) -> Result<Self::Value, A::Error>$/;"	f
visit_pair	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^            fn visit_pair(&mut self, _: Key<'kvs>, _: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^            fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^        fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error>;$/;"	f
visit_pair	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/lib.rs	/^            fn visit_pair($/;"	f
visit_str	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/serde.rs	/^            fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visitor_is_object_safe	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/kv/source.rs	/^    fn visitor_is_object_safe() {$/;"	f
wait_next	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn wait_next(&self) -> *mut Block<T> {$/;"	f
wait_packet	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn wait_packet(&self) -> usize {$/;"	f
wait_ready	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn wait_ready(&self) {$/;"	f
wait_until	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn wait_until(&self, deadline: Option<Instant>) -> Selected {$/;"	f
wait_write	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn wait_write(&self) {$/;"	f
wakeup_server	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn wakeup_server(&mut self) {$/;"	f
warn	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.11/src/macros.rs	/^macro_rules! warn {$/;"	d
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/after.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/never.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/tick.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/select.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool;$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn watch(&mut self, oper: Operation, cx: &Context) {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/waker.rs	/^    pub fn watch(&self, oper: Operation, cx: &Context) {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/lib.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()>;$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/null.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/fsevent.rs	/^    fn watch_inner(&mut self, path: &Path, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/inotify.rs	/^    fn watch_inner(&mut self, path: &Path, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    fn watch_inner(&mut self, path: &Path, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch_inner	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/windows.rs	/^    fn watch_inner(&mut self, path: &Path, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch_not_found	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/error.rs	/^    pub fn watch_not_found() -> Self {$/;"	f
with	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/context.rs	/^    pub fn with<F, R>(f: F) -> R$/;"	f
with_capacity	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub fn with_capacity(cap: usize) -> Self {$/;"	f
with_color	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    pub fn with_color(mut self) -> Self {$/;"	f
with_delay	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-5.0.0-pre.3/src/poll.rs	/^    pub fn with_delay(event_fn: Arc<Mutex<dyn EventFn>>, delay: Duration) -> Result<PollWatcher> {$/;"	f
with_fake_repo	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn with_fake_repo<F>(ignore_contents: &str, files: Vec<&str>, callback: F)$/;"	f
wrap_text	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/help.rs	/^pub fn wrap_text(buf: &mut Write, data: &str, width: usize, indent: usize)$/;"	f
write	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/channel.rs	/^pub unsafe fn write<T>(s: &Sender<T>, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/array.rs	/^    pub unsafe fn write(&self, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/list.rs	/^    pub unsafe fn write(&self, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.4.2/src/flavors/zero.rs	/^    pub unsafe fn write(&self, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write_help	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn write_help(&mut self) -> IoResult<()> {$/;"	f
write_hunk_into	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    fn write_hunk_into<T: AsRef<[u8]> + ?Sized, W: io::Write>($/;"	f
write_into	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    fn write_into<W: io::Write>(&self, mut w: W) -> io::Result<()> {$/;"	f
write_into	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/mod.rs	/^    fn write_into<W: std::io::Write>(&self, mut w: W) -> std::io::Result<()> {$/;"	f
write_line_into	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    fn write_line_into<T: AsRef<[u8]> + ?Sized, W: io::Write>($/;"	f
write_patch_into	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/diffy-0.2.0/src/patch/format.rs	/^    pub fn write_patch_into<T: ToOwned + AsRef<[u8]> + ?Sized, W: io::Write>($/;"	f
write_to_file	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.6/src/file.rs	/^    fn write_to_file(path: &Path, contents: &str) {$/;"	f
write_usage	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/parser.rs	/^    fn write_usage(&mut self) -> IoResult<()> {$/;"	f
wrong_type	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_many.rs	/^fn wrong_type() {$/;"	f
wrong_value	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/argparse-0.2.2/src/test_pos.rs	/^fn wrong_value() {$/;"	f
xor	/home/mimerme/.cargo/registry/src/github.com-1ecc6299db9ec823/sha2-0.9.1/src/sha256/soft.rs	/^fn xor(a: [u32; 4], b: [u32; 4]) -> [u32; 4] {$/;"	f
